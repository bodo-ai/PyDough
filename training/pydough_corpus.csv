graph,question,valid,output
TPCH,"Provide a summary pricing report for all line items shipped as of September 2nd of 1998. The summary should list totals for extended price, discounted extended price, discounted extended price plus tax, average quantity, average extended price, average discount, and number of lines, all broken down by the return flag & line status. This is also known as TPC-H query #1.",Y,"disc_price = l.extended_price * (1 - l.discount)
charge = disc_price * (1 + l.tax)
selected_lines = lines.WHERE((ship_date <= datetime.date(1998, 9, 2)))
partitioned_lines = PARTITION(selected_lines, name="l", by=(return_flag, status))
result = partitioned_lines(
    L_RETURNFLAG=return_flag,
    L_LINESTATUS=status,
    SUM_QTY=SUM(l.quantity),
    SUM_BASE_PRICE=SUM(l.extended_price),
    SUM_DISC_PRICE=SUM(disc_price),
    SUM_CHARGE=SUM(charge),
    AVG_QTY=AVG(l.quantity),
    AVG_PRICE=AVG(l.extended_price),
    AVG_DISC=AVG(l.discount),
    COUNT_ORDER=COUNT(l),
).ORDER_BY(return_flag.ASC(), status.ASC())"
TPCH,"Find, within the European region, for each brass part of size 15, the supplier who can supply it at minimum cost. If several suppliers in that region offer the desired part type and size at the same (minimum) cost, list the parts from suppliers with the 100 highest account balances. List the supplier's account balance, name and nation; the part's number and manufacturer; the supplier's address, phone number and comment information. This is also known as TPC-H query #2.",Y,"selected_parts = (
    nations.WHERE(region.name == "EUROPE")
    .suppliers.supply_records.part(
        s_acctbal=BACK(2).account_balance,
        s_name=BACK(2).name,
        n_name=BACK(3).name,
        s_address=BACK(2).address,
        s_phone=BACK(2).phone,
        s_comment=BACK(2).comment,
        supplycost=BACK(1).supplycost,
    )
    .WHERE(ENDSWITH(part_type, "BRASS") & (size == 15))
)
part_groups = PARTITION(selected_parts, name="p", by=key)(
    best_cost=MIN(p.supplycost)
)
result = part_groups.p.WHERE(
    (supplycost == BACK(1).best_cost)
    & ENDSWITH(part_type, "BRASS")
    & (size == 15)
)(
    S_ACCTBAL=s_acctbal,
    S_NAME=s_name,
    N_NAME=n_name,
    P_PARTKEY=key,
    P_MFGR=manufacturer,
    S_ADDRESS=s_address,
    S_PHONE=s_phone,
    S_COMMENT=s_comment,
).TOP_K(
    100,
    by=(S_ACCTBAL.DESC(), N_NAME.ASC(), S_NAME.ASC(), P_PARTKEY.ASC()),
)"
TPCH,"Find the 10 unshipped orders with the highest value. Retrieves the shipping priority and potential revenue, defined as the sum of the extended price times one minus the discount, of the orders having the largest revenue among those that had not been shipped as of March 15th, 1995. Orders are listed in decreasing order of revenue. If more than 10 unshipped orders exist meeting the criteria, only the 10 orders with the largest revenue are listed. This is also known as TPC-H query #3.",Y,"cutoff_date = datetime.date(1995, 3, 15)
selected_orders = orders.WHERE(
    (customer.mktsegment == "BUILDING") & (order_date < cutoff_date)
)
selected_lines = selected_orders.lines.WHERE(ship_date > cutoff_date)(
    BACK(1).order_date,
    BACK(1).ship_priority,
)
result = PARTITION(
    selected_lines, name="l", by=(order_key, order_date, ship_priority)
)(
    L_ORDERKEY=order_key,
    REVENUE=SUM(l.extended_price * (1 - l.discount)),
    O_ORDERDATE=order_date,
    O_SHIPPRIORITY=ship_priority,
).TOP_K(10, by=(REVENUE.DESC(), O_ORDERDATE.ASC(), L_ORDERKEY.ASC()))"
TPCH,"How well is the order priority system is working at ensuring that orders are delivered on time within the third quarter of 1993? Analyze this by counting the number of orders ordered in the given quarter of the given year in which at least one lineitem was received by the customer later than its committed date. List the count of such orders for each order priority sorted in ascending priority order. This is also known as TPC-H query #4.",Y,"selected_lines = lines.WHERE(commit_date < receipt_date)
selected_orders = orders.WHERE(
    (order_date >= datetime.date(1993, 7, 1))
    & (order_date < datetime.date(1993, 10, 1))
    & HAS(selected_lines)
)
result = PARTITION(selected_orders, name="o", by=order_priority)(
    O_ORDERPRIORITY=order_priority,
    ORDER_COUNT=COUNT(o),
).ORDER_BY(O_ORDERPRIORITY.ASC())"
TPCH,"For each Asian country, calculate the total revenue generated by suppliers in that nation shipping a part to a customer from the same nation, only considering shipments ordered in 1994. Revenue volume for all qualifying lineitems in a particular nation is defined as sum(l_extendedprice * (1 - l_discount)). This is also known as TPC-H query #5.",Y,"selected_lines = customers.orders.WHERE(
    (order_date >= datetime.date(1994, 1, 1))
    & (order_date < datetime.date(1995, 1, 1))
).lines.WHERE(supplier.nation.name == BACK(3).name)(
    value=extended_price * (1 - discount)
)
result = Nations.WHERE(region.name == "ASIA")(
    N_NAME=name, REVENUE=SUM(selected_lines.value)
).ORDER_BY(REVENUE.DESC())
"
TPCH,"How was revenue impacted in 1994 due to the presence of certain discounts, specifically those between 0.05 and 0.07 (inclusive); speculate on future revenue due to a change in that discount. Considers all the lineitems shipped in the given year with discounts in thar range value. List the amount by which the total revenue would have increased if these discounts had been eliminated for lineitems with a quantity below 24. Note that the potential revenue increase is equal to the sum of the extended price times one minus the discount for all lineitems with discounts and quantities in the qualifying range. This is also known as TPC-H query #6.",Y,"selected_lines = lines.WHERE(
    (ship_date >= datetime.date(1994, 1, 1))
    & (ship_date < datetime.date(1995, 1, 1))
    & (0.05 <= discount)
    & (discount <= 0.07)
    & (quantity < 24)
)(amt=extended_price * discount)
result = TPCH(REVENUE=SUM(selected_lines.amt))"
TPCH,"Calculate the value of goods shipped between France and Germany in 1995 and 1996 as a representation for future contract negotiations. Find, for these two nations, the gross discounted revenues derived from lineitems in which parts were shipped from a supplier in either nation to a customer in the other nation during the chosen years. Lists the supplier nation, the customer nation, the year, and the revenue from shipments that took place in that year. Order the answer by Supplier nation, Customer nation, and year (all ascending). This is also known as TPC-H query #7.",Y,"line_info = lines(
    supp_nation=supplier.nation.name,
    cust_nation=order.customer.nation.name,
    l_year=YEAR(ship_date),
    volume=extended_price * (1 - discount),
).WHERE(
    (ship_date >= datetime.date(1995, 1, 1))
    & (ship_date <= datetime.date(1996, 12, 31))
    & (
        ((supp_nation == "FRANCE") & (cust_nation == "GERMANY"))
        | ((supp_nation == "GERMANY") & (cust_nation == "FRANCE"))
    )
)
result = PARTITION(line_info, name="l", by=(supp_nation, cust_nation, l_year))(
    SUPP_NATION=supp_nation,
    CUST_NATION=cust_nation,
    L_YEAR=l_year,
    REVENUE=SUM(l.volume),
).ORDER_BY(
    SUPP_NATION.ASC(),
    CUST_NATION.ASC(),
    L_YEAR.ASC(),
)"
TPCH,"How has the market share of Brazil within the American region has changed from 1995 to 1996 for parts of type 'ECONOMY ANODIZED STEEL'. The market share for a given nation within a given region is defined as the fraction of the revenue, defined as the sum of the extended price times one minus the discount, from the products of a specified type in that region that was supplied by suppliers from the given nation. This is also known as TPC-H query #8.",Y,"selected_orders = orders.WHERE(
  (order_date >= datetime.date(1995, 1, 1))
  & (order_date <= datetime.date(1996, 12, 31))
  & (customer.nation.region.name == "AMERICA")
)

volume = extended_price * (1 - discount)

volume_data = selected_orders.lines.WHERE(
    part.part_type == "ECONOMY ANODIZED STEEL"
)(
    o_year=YEAR(BACK(1).order_date),
    volume=volume,
    brazil_volume=IFF(supplier.nation.name == "BRAZIL", volume, 0)
)

result = PARTITION(volume_data, name="v", by=o_year)(
    O_YEAR=o_year,
    MKT_SHARE=SUM(v.brazil_volume) / SUM(v.volume),
)"
TPCH,"What was the profit made for a particular line of parts looking at the supplying nation and particular year in question, where the line of parts is green parts. Specifically, for each nation and each year, find the profit for all parts ordered in that year that contain 'green' in their names and that were filled by a supplier in that nation. The profit is defined as the sum of the extended price times one minus the discount, minus the product of the supply cost and quantity, for all lineitems describing parts in the specified line. List the nations in ascending alphabetical order and, for each nation, the year and profit in descending order by year (most recent first). This is also known as TPC-H query #9.",Y,"selected_lines = nations.suppliers.supply_records.WHERE(
    CONTAINS(part.name, "green")
).lines(
    nation=BACK(3).name,
    o_year=YEAR(order.order_date),
    value=extended_price * (1 - discount) - BACK(1).supplycost * quantity,
)

result = PARTITION(selected_lines, name="l", by=(nation, o_year))(
    NATION=nation, O_YEAR=o_year, AMOUNT=SUM(l.value)
).ORDER_BY(NATION.ASC(), O_YEAR.DESC())"
TPCH,"This question **determines the top 20 customers based on impact in revenue due to having returned parts within a particular quarter**. Revenue lost is defined as the sum of the extended price times one minus the discount for all qualifying lineitems. The chosen quarter is the last 3 months of 1993. The query lists the customer's name, address, nation, phone number, account balance, comment information and revenue lost.

This is also known as TPC-H query #10.",Y,"selected_lines = orders.WHERE(
    (order_date >= datetime.date(1993, 10, 1))
    & (order_date < datetime.date(1994, 1, 1))
).lines.WHERE(return_flag == "R")(amt=extended_price * (1 - discount))

result = customers(
    C_CUSTKEY=key,
    C_NAME=name,
    REVENUE=SUM(selected_lines.amt),
    C_ACCTBAL=acctbal,
    N_NAME=nation.name,
    C_ADDRESS=address,
    C_PHONE=phone,
    C_COMMENT=comment,
).TOP_K(20, by=(REVENUE.DESC(), C_CUSTKEY.ASC()))"
TPCH,"Identify the most import subset of available part supplies from Germany. To do so, scan the available stock of German suppliers and identify all the parts that represent a significant percentage (at least 0.01%) of the total value of all the stock in Germany. Displays the part number and the value of those parts in descending order of value. The value for a given part from a supplier is defined as the product of the supply cost of the supplier for the part and the quantity that the supplier has for that product. This is also known as TPC-H query #11.",Y,"is_german_supplier = supplier.nation.name == "GERMANY"
selected_records = supply_records.WHERE(is_german_supplier)(metric=supplycost * availqty)
result = TPCH(min_market_share=SUM(selected_records.metric) * 0.0001).PARTITION(
    selected_records, name="ps", by=part_key
)(
    PS_PARTKEY=part_key, VALUE=SUM(ps.metric)
).WHERE(VALUE > BACK(1).min_market_share).ORDER_BY(VALUE.DESC())"
TPCH,"Determine the impact of low cost shipping modes on delays for orders of varying priorities. Do so by counting, by ship mode, for lineitems actually received by customers in 1994, the number of lineitems belonging to orders for which the receipt date exceeds the commit date for ship modes of 'MAIL' or 'SHIP'. Only lineitems that were actually shipped before the commit date are considered. The late lineitems are partitioned into two groups, those with priority `1-URGENT` or `2-HIGH`, and those with a priority other than `1-URGENT` or `2-HIGH`. This is also known as TPC-H query #12.",Y,"selected_lines = lines.WHERE(
    ((ship_mode == "MAIL") | (ship_mode == "SHIP"))
    & (ship_date < commit_date)
    & (commit_date < receipt_date)
    & (receipt_date >= datetime.date(1994, 1, 1))
    & (receipt_date < datetime.date(1995, 1, 1))
)(
    is_high_priority=(order.order_priority == "1-URGENT")
    | (order.order_priority == "2-HIGH"),
)
result = PARTITION(selected_lines, "l", by=ship_mode)(
    L_SHIPMODE=ship_mode,
    HIGH_LINE_COUNT=SUM(l.is_high_priority),
    LOW_LINE_COUNT=SUM(~(l.is_high_priority)),
).ORDER_BY(L_SHIPMODE.ASC())"
TPCH,"Calculate the distribution of customers who have made 0, 1, 2, etc. special request orders made. An order is determined to be a special request if its comment contains 'special' and later contains 'requests'. This is also known as TPC-H query #13.",Y,"customer_info = customers(
    key,
    num_non_special_orders=COUNT(
        orders.WHERE(~(LIKE(comment, "%special%requests%")))
    ),
)
result = PARTITION(customer_info, name="custs", by=num_non_special_orders)(
    C_COUNT=num_non_special_orders, CUSTDIST=COUNT(custs)
).ORDER_BY(CUSTDIST.DESC(), C_COUNT.DESC())"
TPCH,"What percentage of revenue from parts shipped in September of 1995 was from promotional parts (parts whose type begins with 'PROMO'). Revenue is defined as extended price times one minus the discount. This is also known as TPC-H query #14.",Y,"value = extended_price * (1 - discount)
selected_lines = lines.WHERE(
    (ship_date >= datetime.date(1995, 9, 1))
    & (ship_date < datetime.date(1995, 10, 1))
)(
    value=value,
    promo_value=IFF(STARTSWITH(part.part_type, "PROMO"), value, 0),
)
result = TPCH(PROMO_REVENUE=100.0 * SUM(selected_lines.promo_value) / SUM(selected_lines.value))"
TPCH,"Determine the top suppliers in the first quarter of 1996 with the highest revenue from parts shipped in that time period. In case of a tie, the query lists all suppliers whose contribution was equal to the maximum, presented in supplier number order. This is also known as TPC-H query #15.",Y,"selected_lines = lines.WHERE(
    (ship_date >= datetime.date(1996, 1, 1))
    & (ship_date < datetime.date(1996, 4, 1))
)
total = SUM(selected_lines.extended_price * (1 - selected_lines.discount))
result = TPCH(
    max_revenue=MAX(suppliers(total_revenue=total).total_revenue)
).suppliers(
    S_SUPPKEY=key,
    S_NAME=name,
    S_ADDRESS=address,
    S_PHONE=phone,
    TOTAL_REVENUE=total,
).WHERE(TOTAL_REVENUE == BACK(1).max_revenue).ORDER_BY(S_SUPPKEY.ASC())"
TPCH,"Determine how many distinct suppliers can meet the needs of a part with a particular set of attributes. The customer is interested in parts of eight different sizes as long as they are not of type 'MEDIUM POLISHED', not of brand 'BRAND#45', the size is one of [49, 14, 23, 45, 19, 3, 36, 9], excluding suppliers supplier who have had complaints registered at the Better Business Bureau. Break down qualifying parts by the brand, type and size. Present the results by descending count of qualifying suppliers and ascending brand, type, and size. This is also known as TPC-H query #16.",Y,"selected_records = (
    parts.WHERE(
        (brand != "BRAND#45")
        & ~STARTSWITH(part_type, "MEDIUM POLISHED%")
        & ISIN(size, [49, 14, 23, 45, 19, 3, 36, 9])
    )
    .supply_records(
        p_brand=BACK(1).brand,
        p_type=BACK(1).part_type,
        p_size=BACK(1).size,
        ps_suppkey=supplier_key,
    )
    .WHERE(~LIKE(supplier.comment, "%Customer%Complaints%"))
)
result = PARTITION(selected_records, name="ps", by=(p_brand, p_type, p_size))(
    P_BRAND=p_brand,
    P_TYPE=p_type,
    P_SIZE=p_size,
    SUPPLIER_COUNT=NDISTINCT(ps.supplier_key),
).ORDER_BY(SUPPLIER_COUNT.DESC(), P_BRAND.ASC(), P_TYPE.ASC(), P_SIZE.ASC())"
TPCH,"Determine how much average yearly revenue would be lost if orders were no longer filled for small quantities (quantities below 20% of the global average) of parts from brand 'BRAND#23' whose container size is 'MED BOX'. Assume that the data is spread out across 7 years when taking the average across all years. This is also known as TPC-H query #17.",Y,"selected_lines = parts.WHERE((brand == "Brand#23") & (container == "MED BOX"))(
    avg_quantity=AVG(lines.quantity)
).lines.WHERE(quantity < 0.2 * BACK(1).avg_quantity)
result = TPCH(AVG_YEARLY=SUM(selected_lines.extended_price) / 7.0)"
TPCH,"Order customers based on their status as having placed a large quantity order. Calculate a list of the top 100 instances of a customer having placed large quantity orders by the total price of the order. List the customer name, customer key, the order key, date and total price and the quantity for the order. Break ties in favor of the order made first chronologically. This is also known as TPC-H query #18.",Y,"result = orders(
    C_NAME=customer.name,
    C_CUSTKEY=customer.key,
    O_ORDERKEY=key,
    O_ORDERDATE=order_date,
    O_TOTALPRICE=total_price,
    TOTAL_QUANTITY=SUM(lines.quantity),
).WHERE(
    TOTAL_QUANTITY > 300
).TOP_K(100, by=(O_TOTALPRICE.DESC(), O_ORDERDATE.ASC()))"
TPCH,"This is also known as TPC-H query #19.",Y,"
"
TPCH,"This is also known as TPC-H query #20.",Y,"
"
TPCH,"This is also known as TPC-H query #21.",Y,"
"
TPCH,"This is also known as TPC-H query #22.",Y,"
"

