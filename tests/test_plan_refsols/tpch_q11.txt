ROOT(columns=[('PS_PARTKEY', PS_PARTKEY), ('VALUE', VALUE)], orderings=[(ordering_2):desc_last])
 LIMIT(limit=Literal(value=10, type=Int64Type()), columns={'PS_PARTKEY': PS_PARTKEY, 'VALUE': VALUE, 'ordering_2': ordering_2}, orderings=[(ordering_2):desc_last])
  PROJECT(columns={'PS_PARTKEY': PS_PARTKEY, 'VALUE': VALUE, 'ordering_2': VALUE})
   FILTER(condition=VALUE > min_market_share, columns={'PS_PARTKEY': PS_PARTKEY, 'VALUE': VALUE})
    PROJECT(columns={'PS_PARTKEY': part_key, 'VALUE': DEFAULT_TO(agg_1, 0:int64), 'min_market_share': min_market_share})
     JOIN(conditions=[True:bool], types=['left'], columns={'agg_1': t1.agg_1, 'min_market_share': t0.min_market_share, 'part_key': t1.part_key})
      PROJECT(columns={'min_market_share': DEFAULT_TO(agg_0, 0:int64) * 0.0001:float64})
       AGGREGATE(keys={}, aggregations={'agg_0': SUM(metric)})
        PROJECT(columns={'metric': supplycost * availqty})
         JOIN(conditions=[t0.supplier_key == t1.key], types=['inner'], columns={'availqty': t0.availqty, 'supplycost': t0.supplycost})
          SCAN(table=tpch.PARTSUPP, columns={'availqty': ps_availqty, 'supplier_key': ps_suppkey, 'supplycost': ps_supplycost})
          JOIN(conditions=[t0.nation_key == t1.key], types=['inner'], columns={'key': t0.key})
           SCAN(table=tpch.SUPPLIER, columns={'key': s_suppkey, 'nation_key': s_nationkey})
           FILTER(condition=name == 'GERMANY':string, columns={'key': key})
            SCAN(table=tpch.NATION, columns={'key': n_nationkey, 'name': n_name})
      AGGREGATE(keys={'part_key': part_key}, aggregations={'agg_1': SUM(expr_3)})
       PROJECT(columns={'expr_3': supplycost * availqty, 'part_key': part_key})
        JOIN(conditions=[t0.supplier_key == t1.key], types=['inner'], columns={'availqty': t0.availqty, 'part_key': t0.part_key, 'supplycost': t0.supplycost})
         SCAN(table=tpch.PARTSUPP, columns={'availqty': ps_availqty, 'part_key': ps_partkey, 'supplier_key': ps_suppkey, 'supplycost': ps_supplycost})
         JOIN(conditions=[t0.nation_key == t1.key], types=['inner'], columns={'key': t0.key})
          SCAN(table=tpch.SUPPLIER, columns={'key': s_suppkey, 'nation_key': s_nationkey})
          FILTER(condition=name == 'GERMANY':string, columns={'key': key})
           SCAN(table=tpch.NATION, columns={'key': n_nationkey, 'name': n_name})
