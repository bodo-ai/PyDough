ROOT(columns=[('n', n)], orderings=[])
 AGGREGATE(keys={}, aggregations={'n': COUNT()})
  AGGREGATE(keys={'agg_8': agg_8}, aggregations={})
   AGGREGATE(keys={'key': key, 'part_key': part_key, 'supplier_key': supplier_key}, aggregations={'agg_8': ANYTHING(key)})
    FILTER(condition=retail_price < supply_cost * 1.5:numeric & retail_price < supplier_avg_price, columns={'key': key, 'part_key': part_key, 'supplier_key': supplier_key})
     JOIN(conditions=[t0.part_key == t1.key], types=['inner'], columns={'key': t0.key, 'part_key': t0.part_key, 'retail_price': t1.retail_price, 'supplier_avg_price': t0.supplier_avg_price, 'supplier_key': t0.supplier_key, 'supply_cost': t0.supply_cost})
      JOIN(conditions=[t0.key == t1.supplier_key], types=['inner'], columns={'key': t0.key, 'part_key': t1.part_key, 'supplier_avg_price': t0.supplier_avg_price, 'supplier_key': t1.supplier_key, 'supply_cost': t1.supply_cost})
       JOIN(conditions=[t0.key == t1.supplier_key], types=['inner'], columns={'key': t0.key, 'supplier_avg_price': t1.supplier_avg_price})
        FILTER(condition=account_balance < 1000:numeric & nation_key == 19:numeric, columns={'key': key})
         SCAN(table=tpch.SUPPLIER, columns={'account_balance': s_acctbal, 'key': s_suppkey, 'nation_key': s_nationkey})
        PROJECT(columns={'supplier_avg_price': expr_0 / expr_1, 'supplier_key': supplier_key})
         AGGREGATE(keys={'supplier_key': supplier_key}, aggregations={'expr_0': SUM(expr_0), 'expr_1': SUM(expr_1)})
          JOIN(conditions=[t0.part_key == t1.key], types=['inner'], columns={'expr_0': t1.expr_0, 'expr_1': t1.expr_1, 'supplier_key': t0.supplier_key})
           SCAN(table=tpch.PARTSUPP, columns={'part_key': ps_partkey, 'supplier_key': ps_suppkey})
           PROJECT(columns={'expr_0': retail_price, 'expr_1': IFF(PRESENT(retail_price), 1:numeric, 0:numeric), 'key': key})
            SCAN(table=tpch.PART, columns={'key': p_partkey, 'retail_price': p_retailprice})
       SCAN(table=tpch.PARTSUPP, columns={'part_key': ps_partkey, 'supplier_key': ps_suppkey, 'supply_cost': ps_supplycost})
      FILTER(condition=container == 'LG DRUM':string, columns={'key': key, 'retail_price': retail_price})
       SCAN(table=tpch.PART, columns={'container': p_container, 'key': p_partkey, 'retail_price': p_retailprice})
