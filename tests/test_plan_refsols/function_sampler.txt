ROOT(columns=[('a', a), ('b', b), ('c', c), ('d', d), ('e', e)], orderings=[(ordering_0):asc_first])
 LIMIT(limit=Literal(value=10, type=Int64Type()), columns={'a': a, 'b': b, 'c': c, 'd': d, 'e': e, 'ordering_0': ordering_0}, orderings=[(ordering_0):asc_first])
  PROJECT(columns={'a': a, 'b': b, 'c': c, 'd': d, 'e': e, 'ordering_0': address})
   FILTER(condition=MONOTONIC(0.0:float64, acctbal, 100.0:float64), columns={'a': a, 'address': address, 'b': b, 'c': c, 'd': d, 'e': e})
    PROJECT(columns={'a': JOIN_STRINGS('-':string, name, name_3, SLICE(name_6, 16:int64, None:unknown, None:unknown)), 'acctbal': acctbal, 'address': address, 'b': ROUND(acctbal, 1:int64), 'c': KEEP_IF(name_6, SLICE(phone, None:unknown, 1:int64, None:unknown) == '3':string), 'd': PRESENT(KEEP_IF(name_6, SLICE(phone, 1:int64, 2:int64, None:unknown) == '1':string)), 'e': ABSENT(KEEP_IF(name_6, SLICE(phone, 14:int64, None:unknown, None:unknown) == '7':string))})
     JOIN(conditions=[t0.key_2 == t1.nation_key], types=['inner'], columns={'acctbal': t1.acctbal, 'address': t1.address, 'name': t0.name, 'name_3': t0.name_3, 'name_6': t1.name, 'phone': t1.phone})
      JOIN(conditions=[t0.key == t1.region_key], types=['inner'], columns={'key_2': t1.key, 'name': t0.name, 'name_3': t1.name})
       SCAN(table=tpch.REGION, columns={'key': r_regionkey, 'name': r_name})
       SCAN(table=tpch.NATION, columns={'key': n_nationkey, 'name': n_name, 'region_key': n_regionkey})
      SCAN(table=tpch.CUSTOMER, columns={'acctbal': c_acctbal, 'address': c_address, 'name': c_name, 'nation_key': c_nationkey, 'phone': c_phone})
