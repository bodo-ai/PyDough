ROOT(columns=[('n1', n_rows), ('n2', agg_1)], orderings=[])
 JOIN(condition=True:bool, type=LEFT, cardinality=SINGULAR_ACCESS, columns={'agg_1': t1.n_rows, 'n_rows': t0.n_rows})
  AGGREGATE(keys={}, aggregations={'n_rows': COUNT()})
   FILTER(condition=c_acctbal <= min_balance + 10.0:numeric, columns={})
    JOIN(condition=True:bool, type=INNER, cardinality=SINGULAR_ACCESS, columns={'c_acctbal': t0.c_acctbal, 'min_balance': t1.min_balance})
     SCAN(table=tpch.CUSTOMER, columns={'c_acctbal': c_acctbal})
     AGGREGATE(keys={}, aggregations={'min_balance': MIN(c_acctbal)})
      SCAN(table=tpch.CUSTOMER, columns={'c_acctbal': c_acctbal})
  AGGREGATE(keys={}, aggregations={'n_rows': COUNT()})
   FILTER(condition=s_acctbal >= max_balance - 10.0:numeric, columns={})
    JOIN(condition=True:bool, type=INNER, cardinality=SINGULAR_ACCESS, columns={'max_balance': t1.max_balance, 's_acctbal': t0.s_acctbal})
     SCAN(table=tpch.SUPPLIER, columns={'s_acctbal': s_acctbal})
     AGGREGATE(keys={}, aggregations={'max_balance': MAX(s_acctbal)})
      SCAN(table=tpch.SUPPLIER, columns={'s_acctbal': s_acctbal})
