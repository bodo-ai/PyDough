ROOT(columns=[('cust_name', cust_name), ('nation_name', nation_name), ('n_selected_suppliers', n_selected_suppliers), ('selected_suppliers_min', selected_suppliers_min), ('selected_suppliers_max', selected_suppliers_max), ('selected_suppliers_avg', selected_suppliers_avg), ('selected_suppliers_sum', selected_suppliers_sum)], orderings=[(cust_name):asc_first])
 PROJECT(columns={'cust_name': name, 'n_selected_suppliers': DEFAULT_TO(expr_8, 0:numeric), 'nation_name': name_7, 'selected_suppliers_avg': ROUND(expr_9, 2:numeric), 'selected_suppliers_max': expr_10, 'selected_suppliers_min': expr_11, 'selected_suppliers_sum': DEFAULT_TO(expr_12, 0:numeric)})
  LIMIT(limit=Literal(value=5, type=NumericType()), columns={'expr_10': expr_10, 'expr_11': expr_11, 'expr_12': expr_12, 'expr_8': expr_8, 'expr_9': expr_9, 'name': name, 'name_7': name_7}, orderings=[(name):asc_first])
   JOIN(condition=t0.c_nationkey == t1.key_6_0, type=INNER, cardinality=SINGULAR_FILTER, columns={'expr_10': t1.expr_10, 'expr_11': t1.expr_11, 'expr_12': t1.expr_12, 'expr_8': t1.expr_8, 'expr_9': t1.expr_9, 'name': t0.c_name, 'name_7': t1.name_7})
    SCAN(table=tpch.CUSTOMER, columns={'c_name': c_name, 'c_nationkey': c_nationkey})
    PROJECT(columns={'expr_10': agg_2, 'expr_11': agg_3, 'expr_12': agg_4, 'expr_8': agg_0, 'expr_9': agg_1, 'key_6_0': key, 'name_7': name})
     JOIN(condition=t0.key == t1.nation_key, type=LEFT, cardinality=SINGULAR_ACCESS, columns={'agg_0': t1.agg_0, 'agg_1': t1.agg_1, 'agg_2': t1.agg_2, 'agg_3': t1.agg_3, 'agg_4': t1.agg_4, 'key': t0.key, 'name': t0.name})
      JOIN(condition=t0.n_regionkey == t1.key_2_0, type=INNER, cardinality=SINGULAR_FILTER, columns={'key': t0.n_nationkey, 'name': t0.n_name})
       SCAN(table=tpch.NATION, columns={'n_name': n_name, 'n_nationkey': n_nationkey, 'n_regionkey': n_regionkey})
       FILTER(condition=r_name == 'EUROPE':string, columns={'key_2_0': r_regionkey})
        SCAN(table=tpch.REGION, columns={'r_name': r_name, 'r_regionkey': r_regionkey})
      AGGREGATE(keys={'nation_key': nation_key}, aggregations={'agg_0': COUNT(), 'agg_1': AVG(account_balance), 'agg_2': MAX(account_balance), 'agg_3': MIN(account_balance), 'agg_4': SUM(account_balance)})
       FILTER(condition=DEFAULT_TO(agg_0, 0:numeric) >= 5:numeric, columns={'account_balance': account_balance, 'nation_key': nation_key})
        JOIN(condition=t0.s_suppkey == t1.supplier_key, type=LEFT, cardinality=SINGULAR_ACCESS, columns={'account_balance': t0.s_acctbal, 'agg_0': t1.agg_0, 'nation_key': t0.s_nationkey})
         SCAN(table=tpch.SUPPLIER, columns={'s_acctbal': s_acctbal, 's_nationkey': s_nationkey, 's_suppkey': s_suppkey})
         AGGREGATE(keys={'supplier_key': supplier_key}, aggregations={'agg_0': COUNT()})
          JOIN(condition=t0.ps_partkey == t1.key, type=INNER, cardinality=SINGULAR_FILTER, columns={'supplier_key': t0.ps_suppkey})
           SCAN(table=tpch.PARTSUPP, columns={'ps_partkey': ps_partkey, 'ps_suppkey': ps_suppkey})
           FILTER(condition=CONTAINS(p_name, 'mint':string), columns={'key': p_partkey})
            SCAN(table=tpch.PART, columns={'p_name': p_name, 'p_partkey': p_partkey})
