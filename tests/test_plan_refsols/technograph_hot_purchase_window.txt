ROOT(columns=[('start_of_period', start_of_period), ('n_purchases', n_purchases)], orderings=[(n_purchases):desc_last, (start_of_period):asc_first])
 LIMIT(limit=Literal(value=1, type=NumericType()), columns={'n_purchases': n_purchases, 'start_of_period': start_of_period}, orderings=[(n_purchases):desc_last, (start_of_period):asc_first])
  JOIN(conditions=[True:bool], types=['inner'], columns={'n_purchases': t1.n_purchases, 'start_of_period': t0.start_of_period}, correl_name='corr1')
   FILTER(condition=YEAR(calendar_day) == 2024:numeric, columns={'start_of_period': calendar_day})
    SCAN(table=main.CALENDAR, columns={'calendar_day': ca_dt})
   AGGREGATE(keys={}, aggregations={'n_purchases': COUNT()})
    JOIN(conditions=[t0.calendar_day == DATETIME(t1.purchase_timestamp, 'start of day':string)], types=['inner'], columns={})
     FILTER(condition=calendar_day < DATETIME(corr1.start_of_period, '+5 days':string) & calendar_day >= corr1.start_of_period, columns={'calendar_day': calendar_day})
      SCAN(table=main.CALENDAR, columns={'calendar_day': ca_dt})
     SCAN(table=main.DEVICES, columns={'purchase_timestamp': de_purchase_ts})
