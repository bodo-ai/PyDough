ROOT(columns=[('n_sizes', n_rows)], orderings=[])
 AGGREGATE(keys={}, aggregations={'n_rows': COUNT()})
  FILTER(condition=n_rows > avg_n_parts, columns={})
   JOIN(condition=True:bool, type=INNER, cardinality=SINGULAR_ACCESS, columns={'avg_n_parts': t0.avg_n_parts, 'n_rows': t1.n_rows})
    AGGREGATE(keys={}, aggregations={'avg_n_parts': AVG(n_parts)})
     AGGREGATE(keys={'p_size': p_size}, aggregations={'n_parts': COUNT()})
      SCAN(table=tpch.PART, columns={'p_size': p_size})
    AGGREGATE(keys={'p_size': p_size}, aggregations={'n_rows': COUNT()})
     SCAN(table=tpch.PART, columns={'p_size': p_size})
