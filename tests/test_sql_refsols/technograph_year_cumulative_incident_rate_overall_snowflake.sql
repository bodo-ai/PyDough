WITH _S2 AS (
  SELECT
    ca_dt AS CA_DT
  FROM MAIN.CALENDAR
), _S3 AS (
  SELECT
    COUNT(*) AS N_ROWS,
    _S0.CA_DT
  FROM _S2 AS _S0
  JOIN MAIN.DEVICES AS DEVICES
    ON _S0.CA_DT = DATE_TRUNC('DAY', CAST(DEVICES.de_purchase_ts AS TIMESTAMP))
  GROUP BY
    _S0.CA_DT
), _S7 AS (
  SELECT
    COUNT(*) AS N_ROWS,
    _S4.CA_DT
  FROM _S2 AS _S4
  JOIN MAIN.INCIDENTS AS INCIDENTS
    ON _S4.CA_DT = DATE_TRUNC('DAY', CAST(INCIDENTS.in_error_report_ts AS TIMESTAMP))
  GROUP BY
    _S4.CA_DT
), _T1 AS (
  SELECT
    SUM(_S3.N_ROWS) AS SUM_EXPR_3,
    SUM(_S7.N_ROWS) AS SUM_N_ROWS,
    YEAR(_S2.CA_DT) AS YEAR
  FROM _S2 AS _S2
  LEFT JOIN _S3 AS _S3
    ON _S2.CA_DT = _S3.CA_DT
  LEFT JOIN _S7 AS _S7
    ON _S2.CA_DT = _S7.CA_DT
  GROUP BY
    YEAR(_S2.CA_DT)
)
SELECT
  YEAR AS yr,
  ROUND(
    SUM(COALESCE(SUM_N_ROWS, 0)) OVER (ORDER BY YEAR ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) / SUM(COALESCE(SUM_EXPR_3, 0)) OVER (ORDER BY YEAR ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),
    2
  ) AS cum_ir,
  ROUND(
    (
      100.0 * (
        COALESCE(SUM_EXPR_3, 0) - LAG(COALESCE(SUM_EXPR_3, 0), 1) OVER (ORDER BY YEAR)
      )
    ) / LAG(COALESCE(SUM_EXPR_3, 0), 1) OVER (ORDER BY YEAR),
    2
  ) AS pct_bought_change,
  ROUND(
    (
      100.0 * (
        COALESCE(SUM_N_ROWS, 0) - LAG(COALESCE(SUM_N_ROWS, 0), 1) OVER (ORDER BY YEAR)
      )
    ) / LAG(COALESCE(SUM_N_ROWS, 0), 1) OVER (ORDER BY YEAR),
    2
  ) AS pct_incident_change,
  COALESCE(SUM_EXPR_3, 0) AS bought,
  COALESCE(SUM_N_ROWS, 0) AS incidents
FROM _T1
WHERE
  NOT SUM_EXPR_3 IS NULL AND SUM_EXPR_3 > 0
ORDER BY
  YEAR NULLS FIRST
