WITH _T5 AS (
  SELECT
    ca_dt AS CA_DT
  FROM MAIN.CALENDAR
), _S3 AS (
  SELECT
    COUNT(*) AS N_ROWS,
    _S0.CA_DT
  FROM _T5 AS _S0
  JOIN MAIN.DEVICES AS DEVICES
    ON _S0.CA_DT = DATE_TRUNC('DAY', CAST(DEVICES.de_purchase_ts AS TIMESTAMP))
  GROUP BY
    _S0.CA_DT
), _S7 AS (
  SELECT
    COUNT(*) AS N_ROWS,
    _S4.CA_DT
  FROM _T5 AS _S4
  JOIN MAIN.INCIDENTS AS INCIDENTS
    ON _S4.CA_DT = DATE_TRUNC('DAY', CAST(INCIDENTS.in_error_report_ts AS TIMESTAMP))
  GROUP BY
    _S4.CA_DT
), _T3 AS (
  SELECT
    SUM(_S3.N_ROWS) AS SUM_EXPR_3,
    SUM(_S7.N_ROWS) AS SUM_N_ROWS,
    DATE_PART(YEAR, CAST(_T5.CA_DT AS DATETIME)) AS YEAR
  FROM _T5 AS _T5
  LEFT JOIN _S3 AS _S3
    ON _S3.CA_DT = _T5.CA_DT
  LEFT JOIN _S7 AS _S7
    ON _S7.CA_DT = _T5.CA_DT
  GROUP BY
    DATE_PART(YEAR, CAST(_T5.CA_DT AS DATETIME))
), _T0 AS (
  SELECT
    ROUND(
      SUM(COALESCE(SUM_N_ROWS, 0)) OVER (ORDER BY YEAR ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) / SUM(COALESCE(SUM_EXPR_3, 0)) OVER (ORDER BY YEAR ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),
      2
    ) AS CUM_IR,
    ROUND(
      (
        100.0 * (
          COALESCE(SUM_EXPR_3, 0) - LAG(COALESCE(SUM_EXPR_3, 0), 1) OVER (ORDER BY YEAR)
        )
      ) / LAG(COALESCE(SUM_EXPR_3, 0), 1) OVER (ORDER BY YEAR),
      2
    ) AS PCT_BOUGHT_CHANGE,
    ROUND(
      (
        100.0 * (
          COALESCE(SUM_N_ROWS, 0) - LAG(COALESCE(SUM_N_ROWS, 0), 1) OVER (ORDER BY YEAR)
        )
      ) / LAG(COALESCE(SUM_N_ROWS, 0), 1) OVER (ORDER BY YEAR),
      2
    ) AS PCT_INCIDENT_CHANGE,
    COALESCE(SUM_EXPR_3, 0) AS N_DEVICES,
    COALESCE(SUM_N_ROWS, 0) AS N_INCIDENTS,
    YEAR
  FROM _T3
  WHERE
    NOT SUM_EXPR_3 IS NULL AND SUM_EXPR_3 > 0
)
SELECT
  YEAR AS yr,
  CUM_IR AS cum_ir,
  PCT_BOUGHT_CHANGE AS pct_bought_change,
  PCT_INCIDENT_CHANGE AS pct_incident_change,
  N_DEVICES AS bought,
  N_INCIDENTS AS incidents
FROM _T0
ORDER BY
  YEAR NULLS FIRST
