ROOT(columns=[('n_sizes', agg_1)], orderings=[])
 AGGREGATE(keys={}, aggregations={'agg_1': COUNT()})
  FILTER(condition=agg_0_1 > avg_n_combo, columns={})
   JOIN(conditions=[True:bool], types=['inner'], columns={'agg_0_1': t1.agg_0, 'avg_n_combo': t0.avg_n_combo})
    AGGREGATE(keys={}, aggregations={'avg_n_combo': AVG(n_combos)})
     AGGREGATE(keys={'size': size}, aggregations={'n_combos': COUNT()})
      AGGREGATE(keys={'container': container, 'part_type': part_type, 'size': size}, aggregations={})
       SCAN(table=tpch.PART, columns={'container': p_container, 'part_type': p_type, 'size': p_size})
    AGGREGATE(keys={'size': size}, aggregations={'agg_0': COUNT()})
     AGGREGATE(keys={'container': container, 'part_type': part_type, 'size': size}, aggregations={})
      SCAN(table=tpch.PART, columns={'container': p_container, 'part_type': p_type, 'size': p_size})
