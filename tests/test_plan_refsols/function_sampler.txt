ROOT(columns=[('a', a), ('b', b), ('c', c), ('d', d), ('e', e), ('f', f)], orderings=[(address):asc_first])
 LIMIT(limit=Literal(value=10, type=Int64Type()), columns={'a': a, 'address': address, 'b': b, 'c': c, 'd': d, 'e': e, 'f': f}, orderings=[(address):asc_first])
  PROJECT(columns={'a': JOIN_STRINGS('-':string, region_name, nation_name, SLICE(name_6, 16:int64, None:unknown, None:unknown)), 'address': address, 'b': ROUND(acctbal, 1:int64), 'c': KEEP_IF(name_6, SLICE(phone, None:unknown, 1:int64, None:unknown) == '3':string), 'd': PRESENT(KEEP_IF(name_6, SLICE(phone, 1:int64, 2:int64, None:unknown) == '1':string)), 'e': ABSENT(KEEP_IF(name_6, SLICE(phone, 14:int64, None:unknown, None:unknown) == '7':string)), 'f': ROUND(acctbal)})
   JOIN(conditions=[t0.key_2 == t1.nation_key], types=['inner'], columns={'acctbal': t1.acctbal, 'address': t1.address, 'name_6': t1.name, 'nation_name': t0.nation_name, 'phone': t1.phone, 'region_name': t0.region_name})
    JOIN(conditions=[t0.key == t1.region_key], types=['inner'], columns={'key_2': t1.key_2, 'nation_name': t1.nation_name, 'region_name': t0.region_name})
     SCAN(table=tpch.REGION, columns={'key': r_regionkey, 'region_name': r_name})
     SCAN(table=tpch.NATION, columns={'key_2': n_nationkey, 'nation_name': n_name, 'region_key': n_regionkey})
    FILTER(condition=MONOTONIC(0.0:float64, acctbal, 100.0:float64), columns={'acctbal': acctbal, 'address': address, 'name': name, 'nation_key': nation_key, 'phone': phone})
     SCAN(table=tpch.CUSTOMER, columns={'acctbal': c_acctbal, 'address': c_address, 'name': c_name, 'nation_key': c_nationkey, 'phone': c_phone})
