WITH _T5 AS (
  SELECT
    ca_dt AS CALENDAR_DAY
  FROM MAIN.CALENDAR
), _S3 AS (
  SELECT
    COUNT(*) AS AGG_2,
    _S0.CALENDAR_DAY
  FROM _T5 AS _S0
  JOIN MAIN.DEVICES AS DEVICES
    ON _S0.CALENDAR_DAY = DATE_TRUNC('DAY', CAST(DEVICES.de_purchase_ts AS TIMESTAMP))
  GROUP BY
    _S0.CALENDAR_DAY
), _S7 AS (
  SELECT
    COUNT(*) AS AGG_5,
    _S4.CALENDAR_DAY
  FROM _T5 AS _S4
  JOIN MAIN.INCIDENTS AS INCIDENTS
    ON _S4.CALENDAR_DAY = DATE_TRUNC('DAY', CAST(INCIDENTS.in_error_report_ts AS TIMESTAMP))
  GROUP BY
    _S4.CALENDAR_DAY
), _T3 AS (
  SELECT
    SUM(_S3.AGG_2) AS AGG_4,
    SUM(_S7.AGG_5) AS AGG_7,
    DATE_PART(YEAR, _T5.CALENDAR_DAY) AS YEAR
  FROM _T5 AS _T5
  LEFT JOIN _S3 AS _S3
    ON _S3.CALENDAR_DAY = _T5.CALENDAR_DAY
  LEFT JOIN _S7 AS _S7
    ON _S7.CALENDAR_DAY = _T5.CALENDAR_DAY
  GROUP BY
    DATE_PART(YEAR, _T5.CALENDAR_DAY)
), _T0 AS (
  SELECT
    COALESCE(AGG_4, 0) AS BOUGHT,
    ROUND(
      SUM(COALESCE(AGG_7, 0)) OVER (ORDER BY YEAR ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) / SUM(COALESCE(AGG_4, 0)) OVER (ORDER BY YEAR ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),
      2
    ) AS CUM_IR,
    COALESCE(AGG_7, 0) AS INCIDENTS,
    ROUND(
      (
        100.0 * (
          COALESCE(AGG_4, 0) - LAG(COALESCE(AGG_4, 0), 1) OVER (ORDER BY YEAR)
        )
      ) / LAG(COALESCE(AGG_4, 0), 1) OVER (ORDER BY YEAR),
      2
    ) AS PCT_BOUGHT_CHANGE,
    ROUND(
      (
        100.0 * (
          COALESCE(AGG_7, 0) - LAG(COALESCE(AGG_7, 0), 1) OVER (ORDER BY YEAR)
        )
      ) / LAG(COALESCE(AGG_7, 0), 1) OVER (ORDER BY YEAR),
      2
    ) AS PCT_INCIDENT_CHANGE,
    YEAR AS YR
  FROM _T3
  WHERE
    NOT AGG_4 IS NULL AND AGG_4 > 0
)
SELECT
  YR AS yr,
  CUM_IR AS cum_ir,
  PCT_BOUGHT_CHANGE AS pct_bought_change,
  PCT_INCIDENT_CHANGE AS pct_incident_change,
  BOUGHT AS bought,
  INCIDENTS AS incidents
FROM _T0
ORDER BY
  YR NULLS FIRST
