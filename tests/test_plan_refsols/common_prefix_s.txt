ROOT(columns=[('name', name), ('most_recent_order_date', most_recent_order_date), ('most_recent_order_total', most_recent_order_total), ('most_recent_order_distinct', most_recent_order_distinct)], orderings=[(name):asc_first])
 FILTER(condition=most_recent_order_distinct < most_recent_order_total, columns={'most_recent_order_date': most_recent_order_date, 'most_recent_order_distinct': most_recent_order_distinct, 'most_recent_order_total': most_recent_order_total, 'name': name})
  JOIN(conditions=[t0.key == t1.customer_key], types=['inner'], columns={'most_recent_order_date': t1.most_recent_order_date, 'most_recent_order_distinct': t1.most_recent_order_distinct, 'most_recent_order_total': t1.most_recent_order_total, 'name': t0.name})
   JOIN(conditions=[t0.nation_key == t1.key], types=['inner'], columns={'key': t0.key, 'name': t0.name})
    FILTER(condition=market_segment == 'AUTOMOBILE':string, columns={'key': key, 'name': name, 'nation_key': nation_key})
     SCAN(table=tpch.CUSTOMER, columns={'key': c_custkey, 'market_segment': c_mktsegment, 'name': c_name, 'nation_key': c_nationkey})
    FILTER(condition=name == 'GERMANY':string, columns={'key': key})
     SCAN(table=tpch.NATION, columns={'key': n_nationkey, 'name': n_name})
   JOIN(conditions=[t0.key == t1.order_key], types=['inner'], columns={'customer_key': t0.customer_key, 'most_recent_order_date': t0.most_recent_order_date, 'most_recent_order_distinct': t1.most_recent_order_distinct, 'most_recent_order_total': t1.most_recent_order_total})
    FILTER(condition=RANKING(args=[], partition=[customer_key], order=[(order_date):desc_first, (key):asc_last], allow_ties=False) == 1:numeric, columns={'customer_key': customer_key, 'key': key, 'most_recent_order_date': order_date})
     SCAN(table=tpch.ORDERS, columns={'customer_key': o_custkey, 'key': o_orderkey, 'order_date': o_orderdate})
    PROJECT(columns={'most_recent_order_distinct': DEFAULT_TO(expr_2, 0:numeric), 'most_recent_order_total': DEFAULT_TO(expr_3, 0:numeric), 'order_key': order_key})
     AGGREGATE(keys={'order_key': order_key}, aggregations={'expr_2': NDISTINCT(supplier_key), 'expr_3': COUNT()})
      SCAN(table=tpch.LINEITEM, columns={'order_key': l_orderkey, 'supplier_key': l_suppkey})
