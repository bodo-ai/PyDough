ROOT(columns=[('PS_PARTKEY', ps_partkey), ('VALUE', VALUE)], orderings=[(VALUE):desc_last])
 LIMIT(limit=Literal(value=10, type=NumericType()), columns={'VALUE': VALUE, 'ps_partkey': ps_partkey}, orderings=[(VALUE):desc_last])
  FILTER(condition=VALUE > min_market_share, columns={'VALUE': VALUE, 'ps_partkey': ps_partkey})
   JOIN(condition=True:bool, type=INNER, cardinality=SINGULAR_FILTER, columns={'VALUE': t1.VALUE, 'min_market_share': t0.min_market_share, 'ps_partkey': t1.ps_partkey})
    PROJECT(columns={'min_market_share': DEFAULT_TO(sum_metric, 0:numeric) * 0.0001:numeric})
     AGGREGATE(keys={}, aggregations={'sum_metric': SUM(metric)})
      JOIN(condition=t0.ps_suppkey == t1.s_suppkey, type=INNER, cardinality=SINGULAR_FILTER, columns={'metric': t0.metric})
       PROJECT(columns={'metric': ps_supplycost * ps_availqty, 'ps_suppkey': ps_suppkey})
        SCAN(table=tpch.PARTSUPP, columns={'ps_availqty': ps_availqty, 'ps_suppkey': ps_suppkey, 'ps_supplycost': ps_supplycost})
       JOIN(condition=t0.s_nationkey == t1.n_nationkey, type=INNER, cardinality=SINGULAR_FILTER, columns={'s_suppkey': t0.s_suppkey})
        SCAN(table=tpch.SUPPLIER, columns={'s_nationkey': s_nationkey, 's_suppkey': s_suppkey})
        FILTER(condition=n_name == 'GERMANY':string, columns={'n_nationkey': n_nationkey})
         SCAN(table=tpch.NATION, columns={'n_name': n_name, 'n_nationkey': n_nationkey})
    PROJECT(columns={'VALUE': DEFAULT_TO(sum_expr_2, 0:numeric), 'ps_partkey': ps_partkey})
     AGGREGATE(keys={'ps_partkey': ps_partkey}, aggregations={'sum_expr_2': SUM(expr_2)})
      JOIN(condition=t0.ps_suppkey == t1.s_suppkey, type=INNER, cardinality=SINGULAR_FILTER, columns={'expr_2': t0.expr_2, 'ps_partkey': t0.ps_partkey})
       PROJECT(columns={'expr_2': ps_supplycost * ps_availqty, 'ps_partkey': ps_partkey, 'ps_suppkey': ps_suppkey})
        SCAN(table=tpch.PARTSUPP, columns={'ps_availqty': ps_availqty, 'ps_partkey': ps_partkey, 'ps_suppkey': ps_suppkey, 'ps_supplycost': ps_supplycost})
       JOIN(condition=t0.s_nationkey == t1.n_nationkey, type=INNER, cardinality=SINGULAR_FILTER, columns={'s_suppkey': t0.s_suppkey})
        SCAN(table=tpch.SUPPLIER, columns={'s_nationkey': s_nationkey, 's_suppkey': s_suppkey})
        FILTER(condition=n_name == 'GERMANY':string, columns={'n_nationkey': n_nationkey})
         SCAN(table=tpch.NATION, columns={'n_name': n_name, 'n_nationkey': n_nationkey})
