ROOT(columns=[('yr', yr), ('cum_ir', cum_ir), ('pct_bought_change', pct_bought_change), ('pct_incident_change', pct_incident_change), ('bought', bought), ('incidents', incidents)], orderings=[(yr):asc_first])
 PROJECT(columns={'bought': n_devices, 'cum_ir': ROUND(RELSUM(args=[n_incidents], partition=[], order=[(year):asc_last], cumulative=True) / RELSUM(args=[n_devices], partition=[], order=[(year):asc_last], cumulative=True), 2:numeric), 'incidents': n_incidents, 'pct_bought_change': ROUND(100.0:numeric * n_devices - PREV(args=[n_devices], partition=[], order=[(year):asc_last]) / PREV(args=[n_devices], partition=[], order=[(year):asc_last]), 2:numeric), 'pct_incident_change': ROUND(100.0:numeric * n_incidents - PREV(args=[n_incidents], partition=[], order=[(year):asc_last]) / PREV(args=[n_incidents], partition=[], order=[(year):asc_last]), 2:numeric), 'yr': year})
  FILTER(condition=n_devices > 0:numeric, columns={'n_devices': n_devices, 'n_incidents': n_incidents, 'year': year})
   PROJECT(columns={'n_devices': DEFAULT_TO(agg_0, 0:numeric), 'n_incidents': DEFAULT_TO(agg_1, 0:numeric), 'year': year})
    JOIN(conditions=[t0.year == t1.year], types=['left'], columns={'agg_0': t0.agg_0, 'agg_1': t1.agg_1, 'year': t0.year})
     JOIN(conditions=[t0.year == t1.year], types=['left'], columns={'agg_0': t1.agg_0, 'year': t0.year})
      AGGREGATE(keys={'year': year}, aggregations={})
       PROJECT(columns={'year': YEAR(calendar_day)})
        SCAN(table=main.CALENDAR, columns={'calendar_day': ca_dt})
      AGGREGATE(keys={'year': year}, aggregations={'agg_0': COUNT()})
       JOIN(conditions=[t0.calendar_day == DATETIME(t1.purchase_timestamp, 'start of day':string)], types=['inner'], columns={'year': t0.year})
        PROJECT(columns={'calendar_day': calendar_day, 'year': YEAR(calendar_day)})
         SCAN(table=main.CALENDAR, columns={'calendar_day': ca_dt})
        SCAN(table=main.DEVICES, columns={'purchase_timestamp': de_purchase_ts})
     AGGREGATE(keys={'year': year}, aggregations={'agg_1': COUNT()})
      JOIN(conditions=[t0.calendar_day == DATETIME(t1.reported_timestamp, 'start of day':string)], types=['inner'], columns={'year': t0.year})
       PROJECT(columns={'calendar_day': calendar_day, 'year': YEAR(calendar_day)})
        SCAN(table=main.CALENDAR, columns={'calendar_day': ca_dt})
       SCAN(table=main.INCIDENTS, columns={'reported_timestamp': in_error_report_ts})
