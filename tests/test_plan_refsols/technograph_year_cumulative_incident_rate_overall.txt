ROOT(columns=[('yr', year), ('cum_ir', cum_ir), ('pct_bought_change', pct_bought_change), ('pct_incident_change', pct_incident_change), ('bought', bought), ('incidents', incidents)], orderings=[(year):asc_first])
 PROJECT(columns={'bought': n_devices, 'cum_ir': ROUND(RELSUM(args=[n_incidents], partition=[], order=[(year):asc_last], cumulative=True) / RELSUM(args=[n_devices], partition=[], order=[(year):asc_last], cumulative=True), 2:numeric), 'incidents': n_incidents, 'pct_bought_change': ROUND(100.0:numeric * n_devices - PREV(args=[n_devices], partition=[], order=[(year):asc_last]) / PREV(args=[n_devices], partition=[], order=[(year):asc_last]), 2:numeric), 'pct_incident_change': ROUND(100.0:numeric * n_incidents - PREV(args=[n_incidents], partition=[], order=[(year):asc_last]) / PREV(args=[n_incidents], partition=[], order=[(year):asc_last]), 2:numeric), 'year': year})
  FILTER(condition=n_devices > 0:numeric, columns={'n_devices': n_devices, 'n_incidents': n_incidents, 'year': year})
   PROJECT(columns={'n_devices': DEFAULT_TO(agg_4, 0:numeric), 'n_incidents': DEFAULT_TO(agg_7, 0:numeric), 'year': year})
    AGGREGATE(keys={'year': year}, aggregations={'agg_4': SUM(agg_2), 'agg_7': SUM(agg_5)})
     JOIN(condition=t0.ca_dt == t1.calendar_day, type=LEFT, cardinality=SINGULAR_ACCESS, columns={'agg_2': t0.agg_2, 'agg_5': t1.agg_5, 'year': t0.year})
      JOIN(condition=t0.ca_dt == t1.calendar_day, type=LEFT, cardinality=SINGULAR_ACCESS, columns={'agg_2': t1.agg_2, 'ca_dt': t0.ca_dt, 'year': t0.year})
       PROJECT(columns={'ca_dt': ca_dt, 'year': YEAR(ca_dt)})
        SCAN(table=main.CALENDAR, columns={'ca_dt': ca_dt})
       AGGREGATE(keys={'calendar_day': ca_dt}, aggregations={'agg_2': COUNT()})
        JOIN(condition=t0.ca_dt == DATETIME(t1.de_purchase_ts, 'start of day':string), type=INNER, cardinality=PLURAL_FILTER, columns={'ca_dt': t0.ca_dt})
         SCAN(table=main.CALENDAR, columns={'ca_dt': ca_dt})
         SCAN(table=main.DEVICES, columns={'de_purchase_ts': de_purchase_ts})
      AGGREGATE(keys={'calendar_day': ca_dt}, aggregations={'agg_5': COUNT()})
       JOIN(condition=t0.ca_dt == DATETIME(t1.in_error_report_ts, 'start of day':string), type=INNER, cardinality=PLURAL_FILTER, columns={'ca_dt': t0.ca_dt})
        SCAN(table=main.CALENDAR, columns={'ca_dt': ca_dt})
        SCAN(table=main.INCIDENTS, columns={'in_error_report_ts': in_error_report_ts})
