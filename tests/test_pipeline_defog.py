"""
Integration tests for the PyDough workflow on the defog.ai queries.
"""

from collections.abc import Callable

import pytest

from pydough import init_pydough_context, to_sql
from pydough.configs import PyDoughConfigs
from pydough.database_connectors import DatabaseContext, DatabaseDialect
from pydough.metadata import GraphMetadata
from pydough.unqualified import (
    UnqualifiedNode,
)
from tests.test_pydough_functions.defog_outputs import (
    defog_sql_text_broker_adv1,
    defog_sql_text_broker_adv2,
    defog_sql_text_broker_adv3,
    defog_sql_text_broker_adv4,
    defog_sql_text_broker_adv5,
    defog_sql_text_broker_adv6,
    defog_sql_text_broker_adv7,
    defog_sql_text_broker_adv8,
    defog_sql_text_broker_adv9,
    defog_sql_text_broker_adv10,
    defog_sql_text_broker_adv11,
    defog_sql_text_broker_adv12,
    defog_sql_text_broker_adv13,
    defog_sql_text_broker_adv14,
    defog_sql_text_broker_adv15,
    defog_sql_text_broker_adv16,
    defog_sql_text_broker_basic1,
    defog_sql_text_broker_basic2,
    defog_sql_text_broker_basic3,
    defog_sql_text_broker_basic4,
    defog_sql_text_broker_basic5,
    defog_sql_text_broker_basic6,
    defog_sql_text_broker_basic7,
    defog_sql_text_broker_basic8,
    defog_sql_text_broker_basic9,
    defog_sql_text_broker_basic10,
    defog_sql_text_broker_gen1,
    defog_sql_text_broker_gen2,
    defog_sql_text_broker_gen3,
    defog_sql_text_broker_gen4,
    defog_sql_text_broker_gen5,
    defog_sql_text_dealership_adv1,
    defog_sql_text_dealership_adv2,
    defog_sql_text_dealership_adv3,
    defog_sql_text_dealership_adv4,
    defog_sql_text_dealership_adv5,
    defog_sql_text_dealership_adv6,
    defog_sql_text_dealership_adv7,
    defog_sql_text_dealership_adv8,
    defog_sql_text_dealership_adv9,
    defog_sql_text_dealership_adv10,
    defog_sql_text_dealership_adv11,
    defog_sql_text_dealership_adv12,
    defog_sql_text_dealership_adv13,
    defog_sql_text_dealership_adv14,
    defog_sql_text_dealership_adv15,
    defog_sql_text_dealership_adv16,
    defog_sql_text_dealership_basic1,
    defog_sql_text_dealership_basic2,
    defog_sql_text_dealership_basic3,
    defog_sql_text_dealership_basic4,
    defog_sql_text_dealership_basic5,
    defog_sql_text_dealership_basic6,
    defog_sql_text_dealership_basic7,
    defog_sql_text_dealership_basic8,
    defog_sql_text_dealership_basic9,
    defog_sql_text_dealership_basic10,
    defog_sql_text_dealership_gen1,
    defog_sql_text_dealership_gen2,
    defog_sql_text_dealership_gen3,
    defog_sql_text_dealership_gen4,
    defog_sql_text_dealership_gen5,
    defog_sql_text_dermtreatment_adv1,
    defog_sql_text_dermtreatment_adv2,
    defog_sql_text_dermtreatment_adv3,
    defog_sql_text_dermtreatment_adv4,
    defog_sql_text_dermtreatment_adv5,
    defog_sql_text_dermtreatment_adv6,
    defog_sql_text_dermtreatment_adv7,
    defog_sql_text_dermtreatment_adv8,
    defog_sql_text_dermtreatment_adv9,
    defog_sql_text_dermtreatment_adv10,
    defog_sql_text_dermtreatment_adv11,
    defog_sql_text_dermtreatment_adv12,
    defog_sql_text_dermtreatment_adv13,
    defog_sql_text_dermtreatment_adv14,
    defog_sql_text_dermtreatment_adv15,
    defog_sql_text_dermtreatment_adv16,
    defog_sql_text_dermtreatment_basic1,
    defog_sql_text_dermtreatment_basic2,
    defog_sql_text_dermtreatment_basic3,
    defog_sql_text_dermtreatment_basic4,
    defog_sql_text_dermtreatment_basic5,
    defog_sql_text_dermtreatment_basic6,
    defog_sql_text_dermtreatment_basic7,
    defog_sql_text_dermtreatment_basic8,
    defog_sql_text_dermtreatment_basic9,
    defog_sql_text_dermtreatment_basic10,
    defog_sql_text_dermtreatment_gen1,
    defog_sql_text_dermtreatment_gen2,
    defog_sql_text_dermtreatment_gen3,
    defog_sql_text_dermtreatment_gen4,
    defog_sql_text_dermtreatment_gen5,
    defog_sql_text_ewallet_adv1,
    defog_sql_text_ewallet_adv2,
    defog_sql_text_ewallet_adv3,
    defog_sql_text_ewallet_adv4,
    defog_sql_text_ewallet_adv5,
    defog_sql_text_ewallet_adv6,
    defog_sql_text_ewallet_adv7,
    defog_sql_text_ewallet_adv8,
    defog_sql_text_ewallet_adv9,
    defog_sql_text_ewallet_adv10,
    defog_sql_text_ewallet_adv11,
    defog_sql_text_ewallet_adv12,
    defog_sql_text_ewallet_adv13,
    defog_sql_text_ewallet_adv14,
    defog_sql_text_ewallet_adv15,
    defog_sql_text_ewallet_adv16,
    defog_sql_text_ewallet_basic1,
    defog_sql_text_ewallet_basic2,
    defog_sql_text_ewallet_basic3,
    defog_sql_text_ewallet_basic4,
    defog_sql_text_ewallet_basic5,
    defog_sql_text_ewallet_basic6,
    defog_sql_text_ewallet_basic7,
    defog_sql_text_ewallet_basic8,
    defog_sql_text_ewallet_basic9,
    defog_sql_text_ewallet_basic10,
    defog_sql_text_ewallet_gen1,
    defog_sql_text_ewallet_gen2,
    defog_sql_text_ewallet_gen3,
    defog_sql_text_ewallet_gen4,
    defog_sql_text_ewallet_gen5,
)
from tests.test_pydough_functions.defog_test_functions import (
    impl_defog_broker_adv1,
    impl_defog_broker_adv2,
    impl_defog_broker_adv3,
    impl_defog_broker_adv4,
    impl_defog_broker_adv5,
    impl_defog_broker_adv6,
    impl_defog_broker_adv7,
    impl_defog_broker_adv8,
    impl_defog_broker_adv9,
    impl_defog_broker_adv10,
    impl_defog_broker_adv11,
    impl_defog_broker_adv12,
    impl_defog_broker_adv13,
    impl_defog_broker_adv14,
    impl_defog_broker_adv15,
    impl_defog_broker_adv16,
    impl_defog_broker_basic1,
    impl_defog_broker_basic2,
    impl_defog_broker_basic3,
    impl_defog_broker_basic4,
    impl_defog_broker_basic5,
    impl_defog_broker_basic6,
    impl_defog_broker_basic7,
    impl_defog_broker_basic8,
    impl_defog_broker_basic9,
    impl_defog_broker_basic10,
    impl_defog_broker_gen1,
    impl_defog_broker_gen2,
    impl_defog_broker_gen3,
    impl_defog_broker_gen4,
    impl_defog_broker_gen5,
    impl_defog_dealership_adv1,
    impl_defog_dealership_adv2,
    impl_defog_dealership_adv3,
    impl_defog_dealership_adv4,
    impl_defog_dealership_adv5,
    impl_defog_dealership_adv6,
    impl_defog_dealership_adv7,
    impl_defog_dealership_adv8,
    impl_defog_dealership_adv9,
    impl_defog_dealership_adv10,
    impl_defog_dealership_adv11,
    impl_defog_dealership_adv12,
    impl_defog_dealership_adv13,
    impl_defog_dealership_adv14,
    impl_defog_dealership_adv15,
    impl_defog_dealership_adv16,
    impl_defog_dealership_basic1,
    impl_defog_dealership_basic2,
    impl_defog_dealership_basic3,
    impl_defog_dealership_basic4,
    impl_defog_dealership_basic5,
    impl_defog_dealership_basic6,
    impl_defog_dealership_basic7,
    impl_defog_dealership_basic8,
    impl_defog_dealership_basic9,
    impl_defog_dealership_basic10,
    impl_defog_dealership_gen1,
    impl_defog_dealership_gen2,
    impl_defog_dealership_gen3,
    impl_defog_dealership_gen4,
    impl_defog_dealership_gen5,
    impl_defog_dermtreatment_adv1,
    impl_defog_dermtreatment_adv2,
    impl_defog_dermtreatment_adv3,
    impl_defog_dermtreatment_adv4,
    impl_defog_dermtreatment_adv5,
    impl_defog_dermtreatment_adv6,
    impl_defog_dermtreatment_adv7,
    impl_defog_dermtreatment_adv8,
    impl_defog_dermtreatment_adv9,
    impl_defog_dermtreatment_adv10,
    impl_defog_dermtreatment_adv11,
    impl_defog_dermtreatment_adv12,
    impl_defog_dermtreatment_adv13,
    impl_defog_dermtreatment_adv14,
    impl_defog_dermtreatment_adv15,
    impl_defog_dermtreatment_adv16,
    impl_defog_dermtreatment_basic1,
    impl_defog_dermtreatment_basic2,
    impl_defog_dermtreatment_basic3,
    impl_defog_dermtreatment_basic4,
    impl_defog_dermtreatment_basic5,
    impl_defog_dermtreatment_basic6,
    impl_defog_dermtreatment_basic7,
    impl_defog_dermtreatment_basic8,
    impl_defog_dermtreatment_basic9,
    impl_defog_dermtreatment_basic10,
    impl_defog_dermtreatment_gen1,
    impl_defog_dermtreatment_gen2,
    impl_defog_dermtreatment_gen3,
    impl_defog_dermtreatment_gen4,
    impl_defog_dermtreatment_gen5,
    impl_defog_ewallet_adv1,
    impl_defog_ewallet_adv2,
    impl_defog_ewallet_adv3,
    impl_defog_ewallet_adv4,
    impl_defog_ewallet_adv5,
    impl_defog_ewallet_adv6,
    impl_defog_ewallet_adv7,
    impl_defog_ewallet_adv8,
    impl_defog_ewallet_adv9,
    impl_defog_ewallet_adv10,
    impl_defog_ewallet_adv11,
    impl_defog_ewallet_adv12,
    impl_defog_ewallet_adv13,
    impl_defog_ewallet_adv14,
    impl_defog_ewallet_adv15,
    impl_defog_ewallet_adv16,
    impl_defog_ewallet_basic1,
    impl_defog_ewallet_basic2,
    impl_defog_ewallet_basic3,
    impl_defog_ewallet_basic4,
    impl_defog_ewallet_basic5,
    impl_defog_ewallet_basic6,
    impl_defog_ewallet_basic7,
    impl_defog_ewallet_basic8,
    impl_defog_ewallet_basic9,
    impl_defog_ewallet_basic10,
    impl_defog_ewallet_gen1,
    impl_defog_ewallet_gen2,
    impl_defog_ewallet_gen3,
    impl_defog_ewallet_gen4,
    impl_defog_ewallet_gen5,
)
from tests.testing_utilities import (
    PyDoughSQLComparisonTest,
    graph_fetcher,
)


@pytest.mark.parametrize(
    "graph_name",
    [
        "Broker",
        "Dealership",
        "DermTreatment",
        "Ewallet",
    ],
)
def test_graph_structure_defog(defog_graphs: graph_fetcher, graph_name: str) -> None:
    """
    Testing that the metadata for the defog graphs is parsed correctly.
    """
    graph = defog_graphs(graph_name)
    assert isinstance(graph, GraphMetadata), (
        "Expected to be metadata for a PyDough graph"
    )


@pytest.fixture(
    params=[
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv1,
                "Broker",
                defog_sql_text_broker_adv1,
                "broker_adv1",
                order_sensitive=True,
            ),
            id="broker_adv1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv2,
                "Broker",
                defog_sql_text_broker_adv2,
                "broker_adv2",
                order_sensitive=True,
            ),
            id="broker_adv2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv3,
                "Broker",
                defog_sql_text_broker_adv3,
                "broker_adv3",
                order_sensitive=True,
            ),
            id="broker_adv3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv4,
                "Broker",
                defog_sql_text_broker_adv4,
                "broker_adv4",
                order_sensitive=True,
            ),
            id="broker_adv4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv5,
                "Broker",
                defog_sql_text_broker_adv5,
                "broker_adv5",
            ),
            id="broker_adv5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv6,
                "Broker",
                defog_sql_text_broker_adv6,
                "broker_adv6",
            ),
            id="broker_adv6",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv7,
                "Broker",
                defog_sql_text_broker_adv7,
                "broker_adv7",
            ),
            id="broker_adv7",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv8,
                "Broker",
                defog_sql_text_broker_adv8,
                "broker_adv8",
            ),
            id="broker_adv8",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv9,
                "Broker",
                defog_sql_text_broker_adv9,
                "broker_adv9",
            ),
            id="broker_adv9",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv10,
                "Broker",
                defog_sql_text_broker_adv10,
                "broker_adv10",
            ),
            id="broker_adv10",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv11,
                "Broker",
                defog_sql_text_broker_adv11,
                "broker_adv11",
            ),
            id="broker_adv11",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv12,
                "Broker",
                defog_sql_text_broker_adv12,
                "broker_adv12",
            ),
            id="broker_adv12",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv13,
                "Broker",
                defog_sql_text_broker_adv13,
                "broker_adv13",
            ),
            id="broker_adv13",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv14,
                "Broker",
                defog_sql_text_broker_adv14,
                "broker_adv14",
            ),
            id="broker_adv14",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv15,
                "Broker",
                defog_sql_text_broker_adv15,
                "broker_adv15",
            ),
            id="broker_adv15",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_adv16,
                "Broker",
                defog_sql_text_broker_adv16,
                "broker_adv16",
            ),
            id="broker_adv16",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic1,
                "Broker",
                defog_sql_text_broker_basic1,
                "broker_basic1",
                order_sensitive=True,
            ),
            id="broker_basic1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic2,
                "Broker",
                defog_sql_text_broker_basic2,
                "broker_basic2",
                order_sensitive=True,
            ),
            id="broker_basic2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic3,
                "Broker",
                defog_sql_text_broker_basic3,
                "broker_basic3",
                order_sensitive=True,
            ),
            id="broker_basic3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic4,
                "Broker",
                defog_sql_text_broker_basic4,
                "broker_basic4",
                order_sensitive=True,
            ),
            id="broker_basic4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic5,
                "Broker",
                defog_sql_text_broker_basic5,
                "broker_basic5",
            ),
            id="broker_basic5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic6,
                "Broker",
                defog_sql_text_broker_basic6,
                "broker_basic6",
            ),
            id="broker_basic6",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic7,
                "Broker",
                defog_sql_text_broker_basic7,
                "broker_basic7",
                order_sensitive=True,
            ),
            id="broker_basic7",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic8,
                "Broker",
                defog_sql_text_broker_basic8,
                "broker_basic8",
                order_sensitive=True,
            ),
            id="broker_basic8",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic9,
                "Broker",
                defog_sql_text_broker_basic9,
                "broker_basic9",
            ),
            id="broker_basic9",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_basic10,
                "Broker",
                defog_sql_text_broker_basic10,
                "broker_basic10",
            ),
            id="broker_basic10",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_gen1,
                "Broker",
                defog_sql_text_broker_gen1,
                "broker_gen1",
            ),
            id="broker_gen1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_gen2,
                "Broker",
                defog_sql_text_broker_gen2,
                "broker_gen2",
            ),
            id="broker_gen2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_gen3,
                "Broker",
                defog_sql_text_broker_gen3,
                "broker_gen3",
            ),
            id="broker_gen3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_gen4,
                "Broker",
                defog_sql_text_broker_gen4,
                "broker_gen4",
            ),
            id="broker_gen4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_broker_gen5,
                "Broker",
                defog_sql_text_broker_gen5,
                "broker_gen5",
            ),
            id="broker_gen5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv1,
                "Dealership",
                defog_sql_text_dealership_adv1,
                "dealership_adv1",
            ),
            id="dealership_adv1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv2,
                "Dealership",
                defog_sql_text_dealership_adv2,
                "dealership_adv2",
                order_sensitive=True,
            ),
            id="dealership_adv2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv3,
                "Dealership",
                defog_sql_text_dealership_adv3,
                "dealership_adv3",
            ),
            id="dealership_adv3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv4,
                "Dealership",
                defog_sql_text_dealership_adv4,
                "dealership_adv4",
            ),
            id="dealership_adv4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv5,
                "Dealership",
                defog_sql_text_dealership_adv5,
                "dealership_adv5",
                order_sensitive=True,
            ),
            id="dealership_adv5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv6,
                "Dealership",
                defog_sql_text_dealership_adv6,
                "dealership_adv6",
                order_sensitive=True,
            ),
            id="dealership_adv6",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv7,
                "Dealership",
                defog_sql_text_dealership_adv7,
                "dealership_adv7",
            ),
            id="dealership_adv7",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv8,
                "Dealership",
                defog_sql_text_dealership_adv8,
                "dealership_adv8",
                order_sensitive=True,
            ),
            id="dealership_adv8",
            marks=pytest.mark.skip(
                "TODO (gh #162): add user created collections support to PyDough"
            ),
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv9,
                "Dealership",
                defog_sql_text_dealership_adv9,
                "dealership_adv9",
            ),
            id="dealership_adv9",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv10,
                "Dealership",
                defog_sql_text_dealership_adv10,
                "dealership_adv10",
            ),
            id="dealership_adv10",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv11,
                "Dealership",
                defog_sql_text_dealership_adv11,
                "dealership_adv11",
            ),
            id="dealership_adv11",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv12,
                "Dealership",
                defog_sql_text_dealership_adv12,
                "dealership_adv12",
            ),
            id="dealership_adv12",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv13,
                "Dealership",
                defog_sql_text_dealership_adv13,
                "dealership_adv13",
                order_sensitive=True,
            ),
            id="dealership_adv13",
            marks=pytest.mark.skip(
                "TODO (gh #162): add user created collections support to PyDough"
            ),
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv14,
                "Dealership",
                defog_sql_text_dealership_adv14,
                "dealership_adv14",
            ),
            id="dealership_adv14",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv15,
                "Dealership",
                defog_sql_text_dealership_adv15,
                "dealership_adv15",
                order_sensitive=True,
            ),
            id="dealership_adv15",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_adv16,
                "Dealership",
                defog_sql_text_dealership_adv16,
                "dealership_adv16",
                order_sensitive=True,
            ),
            id="dealership_adv16",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic1,
                "Dealership",
                defog_sql_text_dealership_basic1,
                "dealership_basic1",
            ),
            id="dealership_basic1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic2,
                "Dealership",
                defog_sql_text_dealership_basic2,
                "dealership_basic2",
            ),
            id="dealership_basic2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic3,
                "Dealership",
                defog_sql_text_dealership_basic3,
                "dealership_basic3",
            ),
            id="dealership_basic3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic4,
                "Dealership",
                defog_sql_text_dealership_basic4,
                "dealership_basic4",
            ),
            id="dealership_basic4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic5,
                "Dealership",
                defog_sql_text_dealership_basic5,
                "dealership_basic5",
            ),
            id="dealership_basic5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic6,
                "Dealership",
                defog_sql_text_dealership_basic6,
                "dealership_basic6",
                order_sensitive=True,
            ),
            id="dealership_basic6",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic7,
                "Dealership",
                defog_sql_text_dealership_basic7,
                "dealership_basic7",
                order_sensitive=True,
            ),
            id="dealership_basic7",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic8,
                "Dealership",
                defog_sql_text_dealership_basic8,
                "dealership_basic8",
                order_sensitive=True,
            ),
            id="dealership_basic8",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic9,
                "Dealership",
                defog_sql_text_dealership_basic9,
                "dealership_basic9",
                order_sensitive=True,
            ),
            id="dealership_basic9",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_basic10,
                "Dealership",
                defog_sql_text_dealership_basic10,
                "dealership_basic10",
                order_sensitive=True,
            ),
            id="dealership_basic10",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_gen1,
                "Dealership",
                defog_sql_text_dealership_gen1,
                "dealership_gen1",
            ),
            id="dealership_gen1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_gen2,
                "Dealership",
                defog_sql_text_dealership_gen2,
                "dealership_gen2",
            ),
            id="dealership_gen2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_gen3,
                "Dealership",
                defog_sql_text_dealership_gen3,
                "dealership_gen3",
            ),
            id="dealership_gen3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_gen4,
                "Dealership",
                defog_sql_text_dealership_gen4,
                "dealership_gen4",
            ),
            id="dealership_gen4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dealership_gen5,
                "Dealership",
                defog_sql_text_dealership_gen5,
                "dealership_gen5",
            ),
            id="dealership_gen5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv1,
                "Ewallet",
                defog_sql_text_ewallet_adv1,
                "ewallet_adv1",
            ),
            id="ewallet_adv1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv2,
                "Ewallet",
                defog_sql_text_ewallet_adv2,
                "ewallet_adv2",
            ),
            id="ewallet_adv2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv3,
                "Ewallet",
                defog_sql_text_ewallet_adv3,
                "ewallet_adv3",
            ),
            id="ewallet_adv3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv4,
                "Ewallet",
                defog_sql_text_ewallet_adv4,
                "ewallet_adv4",
            ),
            id="ewallet_adv4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv5,
                "Ewallet",
                defog_sql_text_ewallet_adv5,
                "ewallet_adv5",
            ),
            id="ewallet_adv5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv6,
                "Ewallet",
                defog_sql_text_ewallet_adv6,
                "ewallet_adv6",
            ),
            id="ewallet_adv6",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv7,
                "Ewallet",
                defog_sql_text_ewallet_adv7,
                "ewallet_adv7",
            ),
            id="ewallet_adv7",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv8,
                "Ewallet",
                defog_sql_text_ewallet_adv8,
                "ewallet_adv8",
            ),
            id="ewallet_adv8",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv9,
                "Ewallet",
                defog_sql_text_ewallet_adv9,
                "ewallet_adv9",
            ),
            id="ewallet_adv9",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv10,
                "Ewallet",
                defog_sql_text_ewallet_adv10,
                "ewallet_adv10",
            ),
            id="ewallet_adv10",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv11,
                "Ewallet",
                defog_sql_text_ewallet_adv11,
                "ewallet_adv11",
                order_sensitive=True,
            ),
            id="ewallet_adv11",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv12,
                "Ewallet",
                defog_sql_text_ewallet_adv12,
                "ewallet_adv12",
            ),
            id="ewallet_adv12",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv13,
                "Ewallet",
                defog_sql_text_ewallet_adv13,
                "ewallet_adv13",
            ),
            id="ewallet_adv13",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv14,
                "Ewallet",
                defog_sql_text_ewallet_adv14,
                "ewallet_adv14",
            ),
            id="ewallet_adv14",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv15,
                "Ewallet",
                defog_sql_text_ewallet_adv15,
                "ewallet_adv15",
            ),
            id="ewallet_adv15",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_adv16,
                "Ewallet",
                defog_sql_text_ewallet_adv16,
                "ewallet_adv16",
            ),
            id="ewallet_adv16",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic1,
                "Ewallet",
                defog_sql_text_ewallet_basic1,
                "ewallet_basic1",
            ),
            id="ewallet_basic1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic10,
                "Ewallet",
                defog_sql_text_ewallet_basic10,
                "ewallet_basic10",
                order_sensitive=True,
            ),
            id="ewallet_basic10",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic2,
                "Ewallet",
                defog_sql_text_ewallet_basic2,
                "ewallet_basic2",
            ),
            id="ewallet_basic2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic3,
                "Ewallet",
                defog_sql_text_ewallet_basic3,
                "ewallet_basic3",
            ),
            id="ewallet_basic3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic4,
                "Ewallet",
                defog_sql_text_ewallet_basic4,
                "ewallet_basic4",
            ),
            id="ewallet_basic4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic5,
                "Ewallet",
                defog_sql_text_ewallet_basic5,
                "ewallet_basic5",
            ),
            id="ewallet_basic5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic6,
                "Ewallet",
                defog_sql_text_ewallet_basic6,
                "ewallet_basic6",
            ),
            id="ewallet_basic6",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic7,
                "Ewallet",
                defog_sql_text_ewallet_basic7,
                "ewallet_basic7",
                order_sensitive=True,
            ),
            id="ewallet_basic7",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic8,
                "Ewallet",
                defog_sql_text_ewallet_basic8,
                "ewallet_basic8",
            ),
            id="ewallet_basic8",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_basic9,
                "Ewallet",
                defog_sql_text_ewallet_basic9,
                "ewallet_basic9",
                order_sensitive=True,
            ),
            id="ewallet_basic9",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_gen1,
                "Ewallet",
                defog_sql_text_ewallet_gen1,
                "ewallet_gen1",
            ),
            id="ewallet_gen1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_gen2,
                "Ewallet",
                defog_sql_text_ewallet_gen2,
                "ewallet_gen2",
            ),
            id="ewallet_gen2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_gen3,
                "Ewallet",
                defog_sql_text_ewallet_gen3,
                "ewallet_gen3",
            ),
            id="ewallet_gen3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_gen4,
                "Ewallet",
                defog_sql_text_ewallet_gen4,
                "ewallet_gen4",
            ),
            id="ewallet_gen4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_ewallet_gen5,
                "Ewallet",
                defog_sql_text_ewallet_gen5,
                "ewallet_gen5",
            ),
            id="ewallet_gen5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic1,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic1,
                "dermtreatment_basic1",
            ),
            id="dermtreatment_basic1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic2,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic2,
                "dermtreatment_basic2",
            ),
            id="dermtreatment_basic2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic3,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic3,
                "dermtreatment_basic3",
            ),
            id="dermtreatment_basic3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic4,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic4,
                "dermtreatment_basic4",
            ),
            id="dermtreatment_basic4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic5,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic5,
                "dermtreatment_basic5",
            ),
            id="dermtreatment_basic5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic6,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic6,
                "dermtreatment_basic6",
            ),
            id="dermtreatment_basic6",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic7,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic7,
                "dermtreatment_basic7",
            ),
            id="dermtreatment_basic7",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic8,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic8,
                "dermtreatment_basic8",
            ),
            id="dermtreatment_basic8",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic9,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic9,
                "dermtreatment_basic9",
            ),
            id="dermtreatment_basic9",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_basic10,
                "DermTreatment",
                defog_sql_text_dermtreatment_basic10,
                "dermtreatment_basic10",
            ),
            id="dermtreatment_basic10",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv1,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv1,
                "dermtreatment_adv1",
            ),
            id="dermtreatment_adv1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv2,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv2,
                "dermtreatment_adv2",
            ),
            id="dermtreatment_adv2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv3,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv3,
                "dermtreatment_adv3",
            ),
            id="dermtreatment_adv3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv4,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv4,
                "dermtreatment_adv4",
            ),
            id="dermtreatment_adv4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv5,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv5,
                "dermtreatment_adv5",
            ),
            id="dermtreatment_adv5",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv6,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv6,
                "dermtreatment_adv6",
            ),
            id="dermtreatment_adv6",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv7,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv7,
                "dermtreatment_adv7",
            ),
            id="dermtreatment_adv7",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv8,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv8,
                "dermtreatment_adv8",
            ),
            id="dermtreatment_adv8",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv9,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv9,
                "dermtreatment_adv9",
            ),
            id="dermtreatment_adv9",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv10,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv10,
                "dermtreatment_adv10",
            ),
            id="dermtreatment_adv10",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv11,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv11,
                "dermtreatment_adv11",
            ),
            id="dermtreatment_adv11",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv12,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv12,
                "dermtreatment_adv12",
            ),
            id="dermtreatment_adv12",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv13,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv13,
                "dermtreatment_adv13",
            ),
            id="dermtreatment_adv13",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv14,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv14,
                "dermtreatment_adv14",
            ),
            id="dermtreatment_adv14",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv15,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv15,
                "dermtreatment_adv15",
            ),
            id="dermtreatment_adv15",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_adv16,
                "DermTreatment",
                defog_sql_text_dermtreatment_adv16,
                "dermtreatment_adv16",
            ),
            id="dermtreatment_adv16",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_gen1,
                "DermTreatment",
                defog_sql_text_dermtreatment_gen1,
                "dermtreatment_gen1",
            ),
            id="dermtreatment_gen1",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_gen2,
                "DermTreatment",
                defog_sql_text_dermtreatment_gen2,
                "dermtreatment_gen2",
            ),
            id="dermtreatment_gen2",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_gen3,
                "DermTreatment",
                defog_sql_text_dermtreatment_gen3,
                "dermtreatment_gen3",
            ),
            id="dermtreatment_gen3",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_gen4,
                "DermTreatment",
                defog_sql_text_dermtreatment_gen4,
                "dermtreatment_gen4",
            ),
            id="dermtreatment_gen4",
        ),
        pytest.param(
            PyDoughSQLComparisonTest(
                impl_defog_dermtreatment_gen5,
                "DermTreatment",
                defog_sql_text_dermtreatment_gen5,
                "dermtreatment_gen5",
            ),
            id="dermtreatment_gen5",
        ),
    ],
)
def defog_pipeline_test_data(
    request,
) -> PyDoughSQLComparisonTest:
    """
    Returns a dataclass encapsulating all of the information needed to run the
    PyDough code and compare the result against a refsol derived via SQL.
    """
    return request.param


def test_defog_until_sql(
    defog_pipeline_test_data: PyDoughSQLComparisonTest,
    defog_graphs: graph_fetcher,
    empty_context_database: DatabaseContext,
    defog_config: PyDoughConfigs,
    get_sql_test_filename: Callable[[str, DatabaseDialect], str],
    update_tests: bool,
):
    """
    Tests the conversion of the defog analytical questions to SQL.
    """
    unqualified_impl: Callable[..., UnqualifiedNode] = (
        defog_pipeline_test_data.pydough_function
    )
    graph_name: str = defog_pipeline_test_data.graph_name
    test_name: str = defog_pipeline_test_data.test_name
    file_name: str = f"defog_{test_name}"
    file_path: str = get_sql_test_filename(file_name, empty_context_database.dialect)
    graph: GraphMetadata = defog_graphs(graph_name)
    unqualified: UnqualifiedNode = init_pydough_context(graph)(unqualified_impl)()
    sql_text: str = to_sql(
        unqualified,
        metadata=graph,
        database=empty_context_database,
        config=defog_config,
    )
    if update_tests:
        with open(file_path, "w") as f:
            f.write(sql_text + "\n")
    else:
        with open(file_path) as f:
            expected_sql_text: str = f.read()
        assert sql_text == expected_sql_text.strip(), (
            "Mismatch between SQL text produced expected SQL text"
        )


@pytest.mark.execute
def test_defog_e2e(
    defog_pipeline_test_data: PyDoughSQLComparisonTest,
    defog_graphs: graph_fetcher,
    sqlite_defog_connection: DatabaseContext,
    defog_config: PyDoughConfigs,
) -> None:
    """
    Test executing the defog analytical questions on the sqlite database,
    comparing against the result of running the reference SQL query text on the
    same database connector. Run on the defog.ai queries.
    """
    defog_pipeline_test_data.run_e2e_test(
        defog_graphs, sqlite_defog_connection, defog_config
    )
