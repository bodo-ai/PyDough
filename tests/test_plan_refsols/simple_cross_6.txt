ROOT(columns=[('n_pairs', n_pairs)], orderings=[])
 AGGREGATE(keys={}, aggregations={'n_pairs': COUNT()})
  FILTER(condition=customer_key == o_custkey & order_date_5 == o_orderdate & key > o_orderkey, columns={})
   JOIN(condition=True:bool, type=INNER, cardinality=PLURAL_FILTER, columns={'customer_key': t1.customer_key, 'key': t1.key, 'o_custkey': t0.o_custkey, 'o_orderdate': t0.o_orderdate, 'o_orderkey': t0.o_orderkey, 'order_date_5': t1.o_orderdate})
    FILTER(condition=INTEGER(SLICE(o_clerk, 6:numeric, None:unknown, None:unknown)) >= 900:numeric, columns={'o_custkey': o_custkey, 'o_orderdate': o_orderdate, 'o_orderkey': o_orderkey})
     SCAN(table=tpch.ORDERS, columns={'o_clerk': o_clerk, 'o_custkey': o_custkey, 'o_orderdate': o_orderdate, 'o_orderkey': o_orderkey})
    FILTER(condition=INTEGER(SLICE(o_clerk, 6:numeric, None:unknown, None:unknown)) >= 900:numeric, columns={'customer_key': o_custkey, 'key': o_orderkey, 'o_orderdate': o_orderdate})
     SCAN(table=tpch.ORDERS, columns={'o_clerk': o_clerk, 'o_custkey': o_custkey, 'o_orderdate': o_orderdate, 'o_orderkey': o_orderkey})
