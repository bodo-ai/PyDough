ROOT(columns=[('start_of_period', start_of_period), ('n_purchases', n_purchases)], orderings=[(n_purchases):desc_last, (start_of_period):asc_first])
 LIMIT(limit=Literal(value=1, type=NumericType()), columns={'n_purchases': n_purchases, 'start_of_period': start_of_period}, orderings=[(n_purchases):desc_last, (start_of_period):asc_first])
  AGGREGATE(keys={'calendar_day': ca_dt}, aggregations={'n_purchases': COUNT(), 'start_of_period': ANYTHING(ca_dt)})
   JOIN(condition=t0.ca_dt == DATETIME(t1.de_purchase_ts, 'start of day':string), type=INNER, cardinality=PLURAL_FILTER, columns={'ca_dt': t0.ca_dt})
    FILTER(condition=ca_dt < DATETIME(ca_dt, '+5 days':string) & ca_dt >= ca_dt, columns={'ca_dt': ca_dt})
     JOIN(condition=True:bool, type=INNER, cardinality=PLURAL_ACCESS, columns={'ca_dt': t1.ca_dt})
      FILTER(condition=YEAR(ca_dt) == 2024:numeric, columns={})
       SCAN(table=main.CALENDAR, columns={'ca_dt': ca_dt})
      SCAN(table=main.CALENDAR, columns={'ca_dt': ca_dt})
    SCAN(table=main.DEVICES, columns={'de_purchase_ts': de_purchase_ts})
