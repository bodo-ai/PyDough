ROOT(columns=[('n_sizes', agg_1)], orderings=[])
 AGGREGATE(keys={}, aggregations={'agg_1': COUNT()})
  FILTER(condition=agg_0 > avg_n_combo, columns={})
   JOIN(condition=True:bool, type=INNER, cardinality=SINGULAR_ACCESS, columns={'agg_0': t1.agg_0, 'avg_n_combo': t0.avg_n_combo})
    AGGREGATE(keys={}, aggregations={'avg_n_combo': AVG(n_combos)})
     AGGREGATE(keys={'size': size}, aggregations={'n_combos': COUNT()})
      AGGREGATE(keys={'container': p_container, 'part_type': p_type, 'size': p_size}, aggregations={})
       SCAN(table=tpch.PART, columns={'p_container': p_container, 'p_size': p_size, 'p_type': p_type})
    AGGREGATE(keys={'size': size}, aggregations={'agg_0': COUNT()})
     AGGREGATE(keys={'container': p_container, 'part_type': p_type, 'size': p_size}, aggregations={})
      SCAN(table=tpch.PART, columns={'p_container': p_container, 'p_size': p_size, 'p_type': p_type})
