ROOT(columns=[('cust_name', c_name), ('n_selected_suppliers', DEFAULT_TO(n_rows, 0:numeric)), ('selected_suppliers_min', min_s_acctbal), ('selected_suppliers_max', max_s_acctbal), ('selected_suppliers_avg', ROUND(avg_s_acctbal, 2:numeric)), ('selected_suppliers_sum', DEFAULT_TO(sum_s_acctbal, 0:numeric)), ('nation_name', n_name)], orderings=[(c_name):asc_first], limit=5:numeric)
 JOIN(condition=t0.c_nationkey == t1.n_nationkey, type=INNER, cardinality=SINGULAR_FILTER, reverse_cardinality=PLURAL_ACCESS, columns={'avg_s_acctbal': t1.avg_s_acctbal, 'c_name': t0.c_name, 'max_s_acctbal': t1.max_s_acctbal, 'min_s_acctbal': t1.min_s_acctbal, 'n_name': t1.n_name, 'n_rows': t1.n_rows, 'sum_s_acctbal': t1.sum_s_acctbal})
  SCAN(table=tpch.CUSTOMER, columns={'c_name': c_name, 'c_nationkey': c_nationkey})
  JOIN(condition=t0.n_regionkey == t1.r_regionkey, type=INNER, cardinality=SINGULAR_FILTER, reverse_cardinality=PLURAL_ACCESS, columns={'avg_s_acctbal': t0.avg_s_acctbal, 'max_s_acctbal': t0.max_s_acctbal, 'min_s_acctbal': t0.min_s_acctbal, 'n_name': t0.n_name, 'n_nationkey': t0.n_nationkey, 'n_rows': t0.n_rows, 'sum_s_acctbal': t0.sum_s_acctbal})
   JOIN(condition=t0.n_nationkey == t1.s_nationkey, type=LEFT, cardinality=SINGULAR_FILTER, reverse_cardinality=SINGULAR_ACCESS, columns={'avg_s_acctbal': t1.avg_s_acctbal, 'max_s_acctbal': t1.max_s_acctbal, 'min_s_acctbal': t1.min_s_acctbal, 'n_name': t0.n_name, 'n_nationkey': t0.n_nationkey, 'n_regionkey': t0.n_regionkey, 'n_rows': t1.n_rows, 'sum_s_acctbal': t1.sum_s_acctbal})
    SCAN(table=tpch.NATION, columns={'n_name': n_name, 'n_nationkey': n_nationkey, 'n_regionkey': n_regionkey})
    PROJECT(columns={'avg_s_acctbal': sum_s_acctbal / count_s_acctbal, 'max_s_acctbal': max_s_acctbal, 'min_s_acctbal': min_s_acctbal, 'n_rows': n_rows, 's_nationkey': s_nationkey, 'sum_s_acctbal': sum_s_acctbal})
     AGGREGATE(keys={'s_nationkey': s_nationkey}, aggregations={'count_s_acctbal': COUNT(s_acctbal), 'max_s_acctbal': MAX(s_acctbal), 'min_s_acctbal': MIN(s_acctbal), 'n_rows': COUNT(), 'sum_s_acctbal': SUM(s_acctbal)})
      JOIN(condition=t0.s_suppkey == t1.ps_suppkey, type=INNER, cardinality=SINGULAR_FILTER, reverse_cardinality=SINGULAR_ACCESS, columns={'s_acctbal': t0.s_acctbal, 's_nationkey': t0.s_nationkey})
       SCAN(table=tpch.SUPPLIER, columns={'s_acctbal': s_acctbal, 's_nationkey': s_nationkey, 's_suppkey': s_suppkey})
       FILTER(condition=n_rows >= 5:numeric, columns={'ps_suppkey': ps_suppkey})
        AGGREGATE(keys={'ps_suppkey': ps_suppkey}, aggregations={'n_rows': COUNT()})
         JOIN(condition=t0.ps_partkey == t1.p_partkey, type=INNER, cardinality=SINGULAR_FILTER, reverse_cardinality=PLURAL_FILTER, columns={'ps_suppkey': t0.ps_suppkey})
          SCAN(table=tpch.PARTSUPP, columns={'ps_partkey': ps_partkey, 'ps_suppkey': ps_suppkey})
          FILTER(condition=CONTAINS(p_name, 'mint':string), columns={'p_partkey': p_partkey})
           SCAN(table=tpch.PART, columns={'p_name': p_name, 'p_partkey': p_partkey})
   FILTER(condition=r_name == 'EUROPE':string, columns={'r_regionkey': r_regionkey})
    SCAN(table=tpch.REGION, columns={'r_name': r_name, 'r_regionkey': r_regionkey})
