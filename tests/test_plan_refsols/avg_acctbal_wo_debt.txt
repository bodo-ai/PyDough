ROOT(columns=[('region_name', region_name), ('avg_bal_without_debt_erasure', avg_bal_without_debt_erasure)], orderings=[])
 JOIN(condition=t0.key == t1.region_key, type=INNER, cardinality=SINGULAR_ACCESS, columns={'avg_bal_without_debt_erasure': t1.avg_bal_without_debt_erasure, 'region_name': t0.region_name})
  SCAN(table=tpch.REGION, columns={'key': r_regionkey, 'region_name': r_name})
  PROJECT(columns={'avg_bal_without_debt_erasure': expr_0 / expr_1, 'region_key': region_key})
   AGGREGATE(keys={'region_key': region_key}, aggregations={'expr_0': SUM(expr_0), 'expr_1': SUM(expr_1_0)})
    JOIN(condition=t0.key == t1.nation_key, type=INNER, cardinality=PLURAL_ACCESS, columns={'expr_0': t1.expr_0, 'expr_1_0': t1.expr_1_0, 'region_key': t0.region_key})
     SCAN(table=tpch.NATION, columns={'key': n_nationkey, 'region_key': n_regionkey})
     AGGREGATE(keys={'nation_key': nation_key}, aggregations={'expr_0': SUM(expr_1), 'expr_1_0': COUNT(expr_1)})
      PROJECT(columns={'expr_1': LARGEST(account_balance, 0:numeric), 'nation_key': nation_key})
       SCAN(table=tpch.CUSTOMER, columns={'account_balance': c_acctbal, 'nation_key': c_nationkey})
