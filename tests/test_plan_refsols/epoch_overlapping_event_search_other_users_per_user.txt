ROOT(columns=[('user_name', anything_user_name), ('n_other_users', n_other_users)], orderings=[(n_other_users):desc_last, (anything_user_name):asc_first], limit=7:numeric)
 AGGREGATE(keys={'user_id': user_id}, aggregations={'anything_user_name': ANYTHING(user_name), 'n_other_users': NDISTINCT(user_id_11)})
  JOIN(condition=t1.user_name != t0.user_name & t0.search_user_id == t1.user_id, type=INNER, cardinality=SINGULAR_FILTER, reverse_cardinality=PLURAL_FILTER, columns={'user_id': t0.user_id, 'user_id_11': t1.user_id, 'user_name': t0.user_name})
   JOIN(condition=CONTAINS(LOWER(t1.search_string), LOWER(t0.ev_name)), type=INNER, cardinality=PLURAL_FILTER, reverse_cardinality=PLURAL_FILTER, columns={'search_user_id': t1.search_user_id, 'user_id': t0.user_id, 'user_name': t0.user_name})
    JOIN(condition=CONTAINS(LOWER(t0.search_string), LOWER(t1.ev_name)), type=INNER, cardinality=PLURAL_FILTER, reverse_cardinality=PLURAL_FILTER, columns={'ev_name': t1.ev_name, 'user_id': t0.user_id, 'user_name': t0.user_name})
     JOIN(condition=t0.user_id == t1.search_user_id, type=INNER, cardinality=PLURAL_FILTER, reverse_cardinality=SINGULAR_ACCESS, columns={'search_string': t1.search_string, 'user_id': t0.user_id, 'user_name': t0.user_name})
      SCAN(table=USERS, columns={'user_id': user_id, 'user_name': user_name})
      SCAN(table=SEARCHES, columns={'search_string': search_string, 'search_user_id': search_user_id})
     SCAN(table=EVENTS, columns={'ev_name': ev_name})
    SCAN(table=SEARCHES, columns={'search_string': search_string, 'search_user_id': search_user_id})
   SCAN(table=USERS, columns={'user_id': user_id, 'user_name': user_name})
