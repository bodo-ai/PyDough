ROOT(columns=[('container', container), ('highest_price_ship_date', highest_price_ship_date)], orderings=[(highest_price_ship_date):asc_first, (container):asc_first])
 LIMIT(limit=Literal(value=5, type=NumericType()), columns={'container': container, 'highest_price_ship_date': highest_price_ship_date}, orderings=[(highest_price_ship_date):asc_first, (container):asc_first])
  FILTER(condition=agg_51 > 0:numeric, columns={'container': container, 'highest_price_ship_date': agg_33})
   AGGREGATE(keys={'container': container}, aggregations={'agg_33': MAX(expr_32), 'agg_51': SUM(expr_50)})
    PROJECT(columns={'container': container, 'expr_32': agg_31, 'expr_50': agg_49})
     JOIN(condition=t0.key == t1.key, type=LEFT, cardinality=SINGULAR_ACCESS, columns={'agg_31': t1.agg_31, 'agg_49': t1.agg_49, 'container': t0.container})
      FILTER(condition=brand == 'Brand#13':string, columns={'container': container, 'key': key})
       SCAN(table=tpch.PART, columns={'brand': p_brand, 'container': p_container, 'key': p_partkey})
      AGGREGATE(keys={'key': key}, aggregations={'agg_31': ANYTHING(ship_date), 'agg_49': COUNT()})
       FILTER(condition=RANKING(args=[], partition=[container], order=[(extended_price):desc_first, (ship_date):asc_last]) == 1:numeric, columns={'key': key, 'ship_date': ship_date})
        JOIN(condition=t0.key == t1.part_key, type=INNER, cardinality=PLURAL_FILTER, columns={'container': t0.container, 'extended_price': t1.extended_price, 'key': t0.key, 'ship_date': t1.ship_date})
         FILTER(condition=brand == 'Brand#13':string, columns={'container': container, 'key': key})
          SCAN(table=tpch.PART, columns={'brand': p_brand, 'container': p_container, 'key': p_partkey})
         FILTER(condition=ship_mode == 'RAIL':string & tax == 0:numeric, columns={'extended_price': extended_price, 'part_key': part_key, 'ship_date': ship_date})
          SCAN(table=tpch.LINEITEM, columns={'extended_price': l_extendedprice, 'part_key': l_partkey, 'ship_date': l_shipdate, 'ship_mode': l_shipmode, 'tax': l_tax})
