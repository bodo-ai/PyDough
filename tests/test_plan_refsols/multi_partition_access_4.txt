ROOT(columns=[('transaction_id', transaction_id)], orderings=[(transaction_id):asc_first])
 FILTER(condition=shares < cust_max_shares & shares >= cust_ticker_max_shares, columns={'transaction_id': transaction_id})
  JOIN(condition=t0.customer_id_3 == t1.customer_id & t0.ticker_id_4 == t1.ticker_id, type=INNER, cardinality=PLURAL_ACCESS, columns={'cust_max_shares': t0.cust_max_shares, 'cust_ticker_max_shares': t0.cust_ticker_max_shares, 'shares': t1.shares, 'transaction_id': t1.transaction_id})
   JOIN(condition=t0.customer_id == t1.customer_id, type=INNER, cardinality=PLURAL_ACCESS, columns={'cust_max_shares': t0.cust_max_shares, 'cust_ticker_max_shares': t1.cust_ticker_max_shares, 'customer_id_3': t1.customer_id, 'ticker_id_4': t1.ticker_id})
    AGGREGATE(keys={'customer_id': customer_id}, aggregations={'cust_max_shares': MAX(cust_ticker_max_shares)})
     AGGREGATE(keys={'customer_id': customer_id, 'ticker_id': ticker_id}, aggregations={'cust_ticker_max_shares': MAX(shares)})
      SCAN(table=main.sbTransaction, columns={'customer_id': sbTxCustId, 'shares': sbTxShares, 'ticker_id': sbTxTickerId})
    AGGREGATE(keys={'customer_id': customer_id, 'ticker_id': ticker_id}, aggregations={'cust_ticker_max_shares': MAX(shares)})
     SCAN(table=main.sbTransaction, columns={'customer_id': sbTxCustId, 'shares': sbTxShares, 'ticker_id': sbTxTickerId})
   SCAN(table=main.sbTransaction, columns={'customer_id': sbTxCustId, 'shares': sbTxShares, 'ticker_id': sbTxTickerId, 'transaction_id': sbTxId})
