ROOT(columns=[('n', n)], orderings=[])
 AGGREGATE(keys={}, aggregations={'n': COUNT()})
  FILTER(condition=DEFAULT_TO(agg_1, 0:numeric) > 0:numeric, columns={})
   JOIN(condition=t0.key == t1.supplier_key, type=LEFT, cardinality=SINGULAR_ACCESS, columns={'agg_1': t1.agg_1})
    JOIN(condition=t0.key == t1.supplier_key, type=INNER, cardinality=SINGULAR_ACCESS, columns={'key': t0.key})
     FILTER(condition=nation_key <= 3:numeric, columns={'key': key})
      SCAN(table=tpch.SUPPLIER, columns={'key': s_suppkey, 'nation_key': s_nationkey})
     AGGREGATE(keys={'supplier_key': supplier_key}, aggregations={})
      JOIN(condition=t0.part_key == t1.key, type=INNER, cardinality=SINGULAR_ACCESS, columns={'supplier_key': t0.supplier_key})
       SCAN(table=tpch.PARTSUPP, columns={'part_key': ps_partkey, 'supplier_key': ps_suppkey})
       SCAN(table=tpch.PART, columns={'key': p_partkey})
    AGGREGATE(keys={'supplier_key': supplier_key}, aggregations={'agg_1': COUNT()})
     FILTER(condition=retail_price < supply_cost * 1.5:numeric, columns={'supplier_key': supplier_key})
      JOIN(condition=t0.part_key == t1.key, type=INNER, cardinality=SINGULAR_FILTER, columns={'retail_price': t1.retail_price, 'supplier_key': t0.supplier_key, 'supply_cost': t0.supply_cost})
       SCAN(table=tpch.PARTSUPP, columns={'part_key': ps_partkey, 'supplier_key': ps_suppkey, 'supply_cost': ps_supplycost})
       FILTER(condition=STARTSWITH(container, 'SM':string), columns={'key': key, 'retail_price': retail_price})
        SCAN(table=tpch.PART, columns={'container': p_container, 'key': p_partkey, 'retail_price': p_retailprice})
