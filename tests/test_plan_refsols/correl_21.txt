ROOT(columns=[('n_sizes', agg_1)], orderings=[])
 AGGREGATE(keys={}, aggregations={'agg_1': COUNT()})
  FILTER(condition=agg_0 > avg_n_parts, columns={})
   JOIN(conditions=[True:bool], types=['inner'], columns={'agg_0': t1.agg_0, 'avg_n_parts': t0.avg_n_parts})
    PROJECT(columns={'avg_n_parts': agg_0})
     AGGREGATE(keys={}, aggregations={'agg_0': AVG(n_parts)})
      PROJECT(columns={'n_parts': agg_0})
       AGGREGATE(keys={'size': size}, aggregations={'agg_0': COUNT()})
        SCAN(table=tpch.PART, columns={'size': p_size})
    AGGREGATE(keys={'size': size}, aggregations={'agg_0': COUNT()})
     SCAN(table=tpch.PART, columns={'size': p_size})
