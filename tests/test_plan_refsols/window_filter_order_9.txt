ROOT(columns=[('n', n_rows)], orderings=[])
 AGGREGATE(keys={}, aggregations={'n_rows': COUNT()})
  FILTER(condition=ABSENT(1:numeric) & o_totalprice < 0.05:numeric * RELAVG(args=[DEFAULT_TO(sum_o_totalprice, 0:numeric)], partition=[], order=[]), columns={})
   JOIN(condition=t0.o_custkey == t1.c_custkey, type=INNER, cardinality=SINGULAR_ACCESS, reverse_cardinality=PLURAL_ACCESS, columns={'o_totalprice': t0.o_totalprice, 'sum_o_totalprice': t1.sum_o_totalprice})
    FILTER(condition=o_clerk == 'Clerk#000000001':string, columns={'o_custkey': o_custkey, 'o_totalprice': o_totalprice})
     SCAN(table=tpch.ORDERS, columns={'o_clerk': o_clerk, 'o_custkey': o_custkey, 'o_totalprice': o_totalprice})
    JOIN(condition=t0.c_custkey == t1.o_custkey, type=INNER, cardinality=SINGULAR_ACCESS, reverse_cardinality=SINGULAR_ACCESS, columns={'c_custkey': t0.c_custkey, 'sum_o_totalprice': t1.sum_o_totalprice})
     FILTER(condition=c_mktsegment == 'BUILDING':string, columns={'c_custkey': c_custkey})
      SCAN(table=tpch.CUSTOMER, columns={'c_custkey': c_custkey, 'c_mktsegment': c_mktsegment})
     AGGREGATE(keys={'o_custkey': o_custkey}, aggregations={'sum_o_totalprice': SUM(o_totalprice)})
      SCAN(table=tpch.ORDERS, columns={'o_custkey': o_custkey, 'o_totalprice': o_totalprice})
