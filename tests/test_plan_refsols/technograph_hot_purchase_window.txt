ROOT(columns=[('start_of_period', start_of_period), ('n_purchases', n_purchases)], orderings=[(n_purchases):desc_last, (start_of_period):asc_first])
 LIMIT(limit=Literal(value=1, type=NumericType()), columns={'n_purchases': n_purchases, 'start_of_period': start_of_period}, orderings=[(n_purchases):desc_last, (start_of_period):asc_first])
  AGGREGATE(keys={'calendar_day': calendar_day}, aggregations={'n_purchases': COUNT(), 'start_of_period': ANYTHING(start_of_period)})
   JOIN(condition=t0.calendar_day_1 == DATETIME(t1.purchase_timestamp, 'start of day':string), type=INNER, columns={'calendar_day': t0.calendar_day, 'start_of_period': t0.start_of_period})
    FILTER(condition=calendar_day_1 < DATETIME(start_of_period, '+5 days':string) & calendar_day_1 >= start_of_period, columns={'calendar_day': calendar_day, 'calendar_day_1': calendar_day_1, 'start_of_period': start_of_period})
     JOIN(condition=True:bool, type=INNER, columns={'calendar_day': t0.calendar_day, 'calendar_day_1': t1.calendar_day, 'start_of_period': t0.start_of_period})
      FILTER(condition=YEAR(calendar_day) == 2024:numeric, columns={'calendar_day': calendar_day, 'start_of_period': calendar_day})
       SCAN(table=main.CALENDAR, columns={'calendar_day': ca_dt})
      SCAN(table=main.CALENDAR, columns={'calendar_day': ca_dt})
    SCAN(table=main.DEVICES, columns={'purchase_timestamp': de_purchase_ts})
