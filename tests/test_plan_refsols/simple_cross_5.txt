ROOT(columns=[('part_size', part_size), ('best_order_priority', order_priority), ('best_order_priority_qty', total_qty)], orderings=[(size):asc_first])
 JOIN(condition=t0.size == t1.agg_2, type=LEFT, cardinality=SINGULAR_ACCESS, columns={'order_priority': t1.order_priority, 'part_size': t0.part_size, 'size': t0.size, 'total_qty': t1.total_qty})
  LIMIT(limit=Literal(value=10, type=NumericType()), columns={'part_size': part_size, 'size': size}, orderings=[(size):asc_first])
   AGGREGATE(keys={'part_size': size, 'size': size}, aggregations={})
    FILTER(condition=STARTSWITH(container, 'LG':string), columns={'size': size})
     SCAN(table=tpch.PART, columns={'container': p_container, 'size': p_size})
  FILTER(condition=RANKING(args=[], partition=[agg_2], order=[(total_qty):desc_first], allow_ties=False) == 1:numeric, columns={'agg_2': agg_2, 'order_priority': order_priority, 'total_qty': total_qty})
   PROJECT(columns={'agg_2': agg_2, 'order_priority': order_priority, 'total_qty': DEFAULT_TO(agg_0, 0:numeric)})
    AGGREGATE(keys={'order_priority': order_priority, 'size': size}, aggregations={'agg_0': SUM(quantity), 'agg_2': ANYTHING(size)})
     JOIN(condition=t0.part_key == t1.key_3_0 & t1.size_4_0 == t0.part_size, type=INNER, cardinality=SINGULAR_FILTER, columns={'order_priority': t0.order_priority, 'quantity': t0.quantity, 'size': t0.size})
      JOIN(condition=t0.key == t1.order_key, type=INNER, cardinality=PLURAL_FILTER, columns={'order_priority': t0.order_priority, 'part_key': t1.part_key, 'part_size': t0.part_size, 'quantity': t1.quantity, 'size': t0.size})
       JOIN(condition=True:bool, type=INNER, cardinality=PLURAL_FILTER, columns={'key': t1.key, 'order_priority': t1.order_priority, 'part_size': t0.part_size, 'size': t0.size})
        LIMIT(limit=Literal(value=10, type=NumericType()), columns={'part_size': part_size, 'size': size}, orderings=[(size):asc_first])
         AGGREGATE(keys={'part_size': size, 'size': size}, aggregations={})
          FILTER(condition=STARTSWITH(container, 'LG':string), columns={'size': size})
           SCAN(table=tpch.PART, columns={'container': p_container, 'size': p_size})
        FILTER(condition=MONTH(order_date) == 1:numeric & YEAR(order_date) == 1998:numeric, columns={'key': key, 'order_priority': order_priority})
         SCAN(table=tpch.ORDERS, columns={'key': o_orderkey, 'order_date': o_orderdate, 'order_priority': o_orderpriority})
       FILTER(condition=discount == 0:numeric & ship_mode == 'SHIP':string & tax == 0:numeric, columns={'order_key': order_key, 'part_key': part_key, 'quantity': quantity})
        SCAN(table=tpch.LINEITEM, columns={'discount': l_discount, 'order_key': l_orderkey, 'part_key': l_partkey, 'quantity': l_quantity, 'ship_mode': l_shipmode, 'tax': l_tax})
      FILTER(condition=STARTSWITH(container, 'LG':string), columns={'key_3_0': key, 'size_4_0': size})
       SCAN(table=tpch.PART, columns={'container': p_container, 'key': p_partkey, 'size': p_size})
