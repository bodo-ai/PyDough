ROOT(columns=[('date_time', sbTxDateTime), ('txn_within_day', txn_within_day), ('n_buys_within_day', n_buys_within_day), ('pct_apple_txns', pct_apple_txns), ('share_change', share_change), ('rolling_avg_amount', rolling_avg_amount)], orderings=[(sbTxDateTime):asc_first])
 PROJECT(columns={'n_buys_within_day': RELCOUNT(args=[KEEP_IF(sbTxType, sbTxType == 'buy':string)], partition=[txn_day], order=[(sbTxDateTime):asc_last], cumulative=True), 'pct_apple_txns': ROUND(100.0:numeric * RELSUM(args=[ISIN(sbTickerSymbol, ['AAPL', 'AMZN']:array[unknown])], partition=[], order=[(sbTxDateTime):asc_last], cumulative=True) / RELSIZE(args=[], partition=[], order=[(sbTxDateTime):asc_last], cumulative=True), 2:numeric), 'rolling_avg_amount': ROUND(RELAVG(args=[sbTxAmount], partition=[], order=[(sbTxDateTime):asc_last], cumulative=True), 2:numeric), 'sbTxDateTime': sbTxDateTime, 'share_change': RELSUM(args=[IFF(sbTxType == 'buy':string, sbTxShares, 0:numeric - sbTxShares)], partition=[], order=[(sbTxDateTime):asc_last], cumulative=True), 'txn_within_day': RELSIZE(args=[], partition=[txn_day], order=[(sbTxDateTime):asc_last], cumulative=True)})
  PROJECT(columns={'sbTickerSymbol': sbTickerSymbol, 'sbTxAmount': sbTxAmount, 'sbTxDateTime': sbTxDateTime, 'sbTxShares': sbTxShares, 'sbTxType': sbTxType, 'txn_day': DATETIME(sbTxDateTime, 'start of day':string)})
   JOIN(condition=t0.sbTxTickerId == t1.sbTickerId, type=INNER, cardinality=SINGULAR_ACCESS, columns={'sbTickerSymbol': t1.sbTickerSymbol, 'sbTxAmount': t0.sbTxAmount, 'sbTxDateTime': t0.sbTxDateTime, 'sbTxShares': t0.sbTxShares, 'sbTxType': t0.sbTxType})
    FILTER(condition=MONTH(sbTxDateTime) == 4:numeric & YEAR(sbTxDateTime) == 2023:numeric & sbTxStatus == 'success':string, columns={'sbTxAmount': sbTxAmount, 'sbTxDateTime': sbTxDateTime, 'sbTxShares': sbTxShares, 'sbTxTickerId': sbTxTickerId, 'sbTxType': sbTxType})
     SCAN(table=main.sbTransaction, columns={'sbTxAmount': sbTxAmount, 'sbTxDateTime': sbTxDateTime, 'sbTxShares': sbTxShares, 'sbTxStatus': sbTxStatus, 'sbTxTickerId': sbTxTickerId, 'sbTxType': sbTxType})
    SCAN(table=main.sbTicker, columns={'sbTickerId': sbTickerId, 'sbTickerSymbol': sbTickerSymbol})
