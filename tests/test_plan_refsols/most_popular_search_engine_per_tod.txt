ROOT(columns=[('tod', tod), ('search_engine', search_engine), ('n_searches', n_searches)], orderings=[(tod):asc_first])
 FILTER(condition=RANKING(args=[], partition=[tod], order=[(n_searches):desc_first, (search_engine):asc_last]) == 1:int64, columns={'n_searches': n_searches, 'search_engine': search_engine, 'tod': tod})
  PROJECT(columns={'n_searches': DEFAULT_TO(agg_0, 0:int64), 'search_engine': search_engine, 'tod': tod})
   AGGREGATE(keys={'search_engine': search_engine, 'tod': tod}, aggregations={'agg_0': COUNT()})
    JOIN(conditions=[t0.start_hour <= HOUR(t1.ts) & HOUR(t1.ts) < t0.end_hour], types=['inner'], columns={'search_engine': t1.search_engine, 'tod': t0.tod})
     SCAN(table=TIMES, columns={'end_hour': t_end_hour, 'start_hour': t_start_hour, 'tod': t_name})
     SCAN(table=SEARCHES, columns={'search_engine': search_engine, 'ts': search_ts})
